<?php

# -- #
/**
* –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: Proxygram
* –ö–∞–Ω–∞–ª: @Proxygram
* –ì—Ä—É–ø–ø–∞: @ProxygramHUB
 * –í–µ—Ä—Å–∏—è: 2.5
**/

include_once 'config.php';
include_once 'api/sanayi.php';
# include_once  'api/hiddify.php';


if ($data == '–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è') {
    if (isJoin($from_id)){
        deleteMessage($from_id, $message_id);
        sendMessage($from_id, $texts['success_joined'], $start_key);
    } else {
        alert($texts['not_join']);
    }
}

elseif(isJoin($from_id) == false){
    joinSend($from_id);
}

elseif($user['status'] == '–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω' and $from_id != $config['dev']){
    sendMessage($from_id, $texts['block']);
}

elseif ($text == '/start' or $text == 'üîô –ù–∞–∑–∞–¥' or $text == '/back') {
    step('none');
    sendMessage($from_id, sprintf($texts['start'], $first_name), $start_key);
}

elseif ($text == '‚ùå  –û—Ç–º–µ–Ω–∞' and $user['step'] == '–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å_—Å–µ—Ä–≤–∏—Å') {
    step('none');
    foreach ([$from_id . '-location.txt', $from_id . '-protocol.txt'] as $file) if (file_exists($file)) unlink($file);
    if($sql->query("SELECT * FROM `service_factors` WHERE `from_id` = '$from_id'")->num_rows > 0) $sql->query("DELETE FROM `service_factors` WHERE `from_id` = '$from_id'");
    sendMessage($from_id, sprintf($texts['start'], $first_name), $start_key);
}

elseif ($text == 'üõí –ö—É–ø–∏—Ç—å —Å–µ—Ä–≤–∏—Å') {
    $servers = $sql->query("SELECT * FROM `panels` WHERE `status` = '–∞–∫—Ç–∏–≤–µ–Ω'");
    if ($servers->num_rows > 0) {
        step('buy_service');
        if ($sql->query("SELECT * FROM `service_factors` WHERE `from_id` = '$from_id'")->num_rows > 0) $sql->query("DELETE FROM `service_factors` WHERE `from_id` = '$from_id'");
        while ($row = $servers->fetch_assoc()) {
            $location[] = ['text' => $row['name']];
        }
        $location = array_chunk($location, 2);
        $location[] = [['text' => 'üîô –ù–∞–∑–∞–¥']];
        $location = json_encode(['keyboard' => $location, 'resize_keyboard' => true]);
        sendMessage($from_id, $texts['select_location'], $location);
    } else {
        sendmessage($from_id, $texts['inactive_buy_service'], $start_key);
    }
}

elseif ($user['step'] == 'buy_service') {
    $response = $sql->query("SELECT `name` FROM `panels` WHERE `name` = '$text'");
    if ($response->num_rows == 0) {
        step('none');
        sendMessage($from_id, $texts['choice_error']);
    } else {
        step('select_plan');
        $plans = $sql->query("SELECT * FROM `category` WHERE `status` = '–∞–∫—Ç–∏–≤–µ–Ω'");
        while ($row = $plans->fetch_assoc()) {
            $plan[] = ['text' => $row['name']];
        }
        $plan = array_chunk($plan, 2);
        $plan[] = [['text' => 'üîô –ù–∞–∑–∞–¥']];
        $plan = json_encode(['keyboard' => $plan, 'resize_keyboard' => true]);
        file_put_contents("$from_id-location.txt", $text);
        sendMessage($from_id, $texts['select_plan'], $plan);
    }
}

elseif ($user['step'] == 'select_plan') {
    $response = $sql->query("SELECT `name` FROM `category` WHERE `name` = '$text'")->num_rows;
    if ($response > 0) {
        step('confirm_service');
        sendMessage($from_id, $texts['create_factor'], $confirm_service);
        $location = file_get_contents("$from_id-location.txt");
        $plan = $text;
        $code = rand(111111, 999999);

        $fetch = $sql->query("SELECT * FROM `category` WHERE `name` = '$text'")->fetch_assoc();
        $price = $fetch['price'] ?? 0;
        $limit = $fetch['limit'] ?? 0;
        $date = $fetch['date'] ?? 0;

        $sql->query("INSERT INTO `service_factors` (`from_id`, `location`, `protocol`, `plan`, `price`, `code`, `status`) VALUES ('$from_id', '$location', 'null', '$plan', '$price', '$code', '–∞–∫—Ç–∏–≤–µ–Ω')");
        $copen_key = json_encode(['inline_keyboard' => [[['text' => 'üéÅ –ü—Ä–æ–º–æ–∫–æ–¥', 'callback_data' => 'use_copen-'.$code]]]]);
        sendMessage($from_id, sprintf($texts['service_factor'], $location, $limit, $date, $code, number_format($price)), $copen_key);
    } else {
        sendMessage($from_id, $texts['choice_error']);
    }
}

elseif ($data == 'cancel_copen') {
    step('confirm_service');
    deleteMessage($from_id, $message_id);
}

elseif (strpos($data, 'use_copen') !== false and $user['step'] == 'confirm_service') {
    $code = explode('-', $data)[1];
    step('send_copen-'.$code);
    sendMessage($from_id, $texts['send_copen'], $cancel_copen);
}

elseif (strpos($user['step'], 'send_copen-') !== false) {
    $code = explode('-', $user['step'])[1];
    $copen = $sql->query("SELECT * FROM `copens` WHERE `copen` = '$text'");
    $service = $sql->query("SELECT * FROM `service_factors` WHERE `code` = '$code'")->fetch_assoc();
    if ($copen->num_rows > 0) {
        $copen = $copen->fetch_assoc();
        if ($copen['status'] == '–∞–∫—Ç–∏–≤–µ–Ω') {
            if ($copen['count_use'] > 0) {
                step('confirm_service');
                $price =  $service['price'] * (intval($copen['percent']) / 100);
                $sql->query("UPDATE `service_factors` SET `price` = price - $price WHERE `code` = '$code'");
                sendMessage($from_id, sprintf($texts['success_copen'], $copen['percent']), $confirm_service);
            } else {
                sendMessage($from_id, $texts['copen_full'], $cancel_copen);
            }
        } else {
            sendMessage($from_id, $texts['copen_error'], $cancel_copen);
        }
    } else {
        sendMessage($from_id, $texts['copen_error'], $cancel_copen);
    }
}

elseif($user['step'] == 'confirm_service' and $text == '‚òëÔ∏è –°–æ–∑–¥–∞—Ç—å —Å–µ—Ä–≤–∏—Å'){
    step('none');
    sendMessage($from_id, $texts['create_service_proccess']);
    # ---------------- —É–¥–∞–ª–∏—Ç—å –ª–∏—à–Ω–∏–µ —Ñ–∞–π–ª—ã ---------------- #
    foreach ([$from_id . '-location.txt', $from_id . '-protocol.txt'] as $file) if (file_exists($file)) unlink($file);
    # ---------------- –ø–æ–ª—É—á–∏—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ ---------------- #
    $select_service = $sql->query("SELECT * FROM `service_factors` WHERE `from_id` = '$from_id'")->fetch_assoc();
    $location = $select_service['location'];
    $plan = $select_service['plan'];
    $price = $select_service['price'];
    $code = $select_service['code'];
    $status = $select_service['status'];
    $name = base64_encode($code) . '_' . $from_id;
    $get_plan = $sql->query("SELECT * FROM `category` WHERE `name` = '$plan'");
    $get_plan_fetch = $get_plan->fetch_assoc();
    $date = $get_plan_fetch['date'] ?? 0;
    $limit = $get_plan_fetch['limit'] ?? 0;
    $info_panel = $sql->query("SELECT * FROM `panels` WHERE `name` = '$location'");
    $panel = $info_panel->fetch_assoc();
    # ---------------- –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–Ω–µ—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ ---------------- #
    if ($user['coin'] < $select_service['price']) {
        sendMessage($from_id, sprintf($texts['not_coin'], number_format($price)), $start_key);
        exit();
    }
    # ---------------- –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö ----------------#
    if ($get_plan->num_rows == 0) {
        sendmessage($from_id, sprintf($texts['create_error'], 0), $start_key);
        exit();
    }
    # ---------------- –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ ---------------- #
    if ($panel['type'] == 'marzban') {
        # ---------------- –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–∫—Å–∏ –∏ –≤—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–ª—è –ø–∞–Ω–µ–ª–∏ marzban ---------------- #
        $protocols = explode('|', $panel['protocols']);
        unset($protocols[count($protocols)-1]);
        if ($protocols[0] == '') unset($protocols[0]);
        $proxies = array();
        foreach ($protocols as $protocol) {
            if ($protocol == 'vless' and $panel['flow'] == 'flowon'){
                $proxies[$protocol] = array('flow' => 'xtls-rprx-vision');
            } else {
                $proxies[$protocol] = array();
            }
        }
        sendMessage($from_id, json_encode($protocols, 448));
        sendMessage($from_id, json_encode($proxies, 448));
        $panel_inbounds = $sql->query("SELECT * FROM `marzban_inbounds` WHERE `panel` = '{$panel['code']}'");
        $inbounds = array();
        foreach ($protocols as $protocol) {
            while ($row = $panel_inbounds->fetch_assoc()) {
                $inbounds[$protocol][] = $row['inbound'];
            }
        }
        sendMessage($from_id, json_encode($inbounds, 448));
        # ---------------- —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä–≤–∏—Å ---------------- #
        $token = loginPanel($panel['login_link'], $panel['username'], $panel['password'])['access_token'];
        $create_service = createService($name, convertToBytes($limit.'GB'), strtotime("+ $date day"), $proxies, ($panel_inbounds->num_rows > 0) ? $inbounds : 'null', $token, $panel['login_link']);
        $create_status = json_decode($create_service, true);
        # ---------------- –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—à–∏–±–∫–∏ ---------------- #
        if (!isset($create_status['username'])) {
            sendMessage($from_id, sprintf($texts['create_error'], 1), $start_key);
            exit();
        }
        # ---------------- –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫–∏ –∏ subscription_url –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ---------------- #
        $links = "";
        foreach ($create_status['links'] as $link) $links .= $link . "\n\n";
        
        if ($info_panel->num_rows > 0) {
            $getMe = json_decode(file_get_contents("https://api.telegram.org/bot{$config['token']}/getMe"), true);
            $subscribe = (strpos($create_status['subscription_url'], 'http') !== false) ? $create_status['subscription_url'] : $panel['login_link'] . $create_status['subscription_url'];
            if ($panel['qr_code'] == '–∞–∫—Ç–∏–≤–µ–Ω') {
                $encode_url = urlencode($subscribe);
                bot('sendPhoto', ['chat_id' => $from_id, 'photo' => "https://api.qrserver.com/v1/create-qr-code/?data=$encode_url&size=800x800", 'caption' => sprintf($texts['success_create_service'], $name, $location, $date, $limit, number_format($price), $subscribe, '@' . $getMe['result']['username']), 'parse_mode' => 'html', 'reply_markup' => $start_key]);
            } else {
                sendmessage($from_id, sprintf($texts['success_create_service'], $name, $location, $date, $limit, number_format($price), $subscribe, '@' . $getMe['result']['username']), $start_key);
            }
            $sql->query("INSERT INTO `orders` (`from_id`, `location`, `protocol`, `date`, `volume`, `link`, `price`, `code`, `status`, `type`) VALUES ('$from_id', '$location', 'null', '$date', '$limit', '$links', '$price', '$code', '–∞–∫—Ç–∏–≤–µ–Ω', 'marzban')");
            // sendmessage($config['dev'], sprintf($texts['success_create_notif']), $first_name, $username, $from_id, $user['count_service'], $user['coin'], $location, $plan, $limit, $date, $code, number_format($price));
        }else{
            sendmessage($from_id, sprintf($texts['create_error'], 2), $start_key);
            exit();
        }

    } elseif ($panel['type'] == 'sanayi') {

        include_once 'api/sanayi.php';
        $xui = new Sanayi($panel['login_link'], $panel['token']);
        $san_setting = $sql->query("SELECT * FROM `sanayi_panel_setting` WHERE `code` = '{$panel['code']}'")->fetch_assoc();
        $create_service = $xui->addClient($name, $san_setting['inbound_id'], $date, $limit);
        $create_status = json_decode($create_service, true);
        # ---------------- –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—à–∏–±–∫–∏ ---------------- #
        if ($create_status['status'] == false) {
            sendMessage($from_id, sprintf($texts['create_error'], 1), $start_key);
            exit();
        }

        		# ---------------- –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫–∏ –∏ subscription_url –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ---------------- #
		if ($info_panel->num_rows > 0) {
			$getMe = json_decode(file_get_contents("https://api.telegram.org/bot{$config['token']}/getMe"), true);
			$link = str_replace(['%s1', '%s2', '%s3'], [$create_status['results']['id'], str_replace(parse_url($panel['login_link'])['port'], json_decode($xui->getPortById($san_setting['inbound_id']), true)['port'], str_replace(['https://', 'http://'], ['', ''], $panel['login_link'])), $create_status['results']['remark']], $san_setting['example_link']);
			if ($panel['qr_code'] == 'active') {
				$encode_url = urlencode($link);
				bot('sendPhoto', ['chat_id' => $from_id, 'photo' => "https://api.qrserver.com/v1/create-qr-code/?data=$encode_url&size=800x800", 'caption' => sprintf($texts['success_create_service_sanayi'], $name, $location, $date, $limit, number_format($price), $link, $create_status['results']['subscribe'], '@' . $getMe['result']['username']), 'parse_mode' => 'html', 'reply_markup' => $start_key]);
			} else {
				sendMessage($from_id, sprintf($texts['success_create_service_sanayi'], $name, $location, $date, $limit, number_format($price), $link, $create_status['results']['subscribe'], '@' . $getMe['result']['username']), $start_key);
			}
			$sql->query("INSERT INTO `orders` (`from_id`, `location`, `protocol`, `date`, `volume`, `link`, `price`, `code`, `status`, `type`) VALUES ('$from_id', '$location', 'null', '$date', '$limit', '$link', '$price', '$code', 'active', 'sanayi')");
			// sendMessage($config['dev'], sprintf($texts['success_create_notif']), $first_name, $username, $from_id, $user['count_service'], $user['coin'], $location, $plan, $limit, $date, $code, number_format($price));
		} else {
			sendMessage($from_id, sprintf($texts['create_error'], 2), $start_key);
			exit();
		}
	}
	$sql->query("DELETE FROM `service_factors` WHERE `from_id` = '$from_id'");
	$sql->query("UPDATE `users` SET `coin` = coin - $price, `count_service` = count_service + 1 WHERE `from_id` = '$from_id' LIMIT 1");
}
	
elseif ($text == 'üéÅ –°–µ—Ä–≤–∏—Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)' and $test_account_setting['status'] == 'active') {
	step('none');
	if ($user['test_account'] == 'no') {
		sendMessage($from_id, '‚è≥', $start_key);

		$panel = $sql->query("SELECT * FROM `panels` WHERE `code` = '{$test_account_setting['panel']}'");
		$panel_fetch = $panel->fetch_assoc();

		try {
			if ($panel_fetch['type'] == 'marzban') {
			# ---------------- —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–∫—Å–∏ –∏ –≤—Ö–æ–¥—è—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¥–ª—è –ø–∞–Ω–µ–ª–∏ marzban ---------------- #
				$protocols = explode('|', $panel_fetch['protocols']);
				unset($protocols[count($protocols)-1]);
				if ($protocols[0] == '') unset($protocols[0]);
				$proxies = array();
				foreach ($protocols as $protocol) {
					if ($protocol == 'vless' and $panel_fetch['flow'] == 'flowon'){
						$proxies[$protocol] = array('flow' => 'xtls-rprx-vision');
					} else {
						$proxies[$protocol] = array();
					}
				}

				$panel_inbounds = $sql->query("SELECT * FROM `marzban_inbounds` WHERE `panel` = '{$panel_fetch['code']}'");
				$inbounds = array();
				foreach ($protocols as $protocol) {
					while ($row = $panel_inbounds->fetch_assoc()) {
						$inbounds[$protocol][] = $row['inbound'];
					}
				}
				# ---------------------------------------------- #
				$code = rand(111111, 999999);
				$name = base64_encode($code) . '_' . $from_id;
				$create_service = createService($name, convertToBytes($test_account_setting['volume'].'GB'), strtotime("+ {$test_account_setting['time']} hour"), $proxies, ($panel_inbounds->num_rows > 0) ? $inbounds : 'null', $panel_fetch['token'], $panel_fetch['login_link']);
				$create_status = json_decode($create_service, true);
				if (isset($create_status['username'])) {
					$links = "";
					foreach ($create_status['links'] as $link) $links .= $link . "\n\n";
					$subscribe = (strpos($create_status['subscription_url'], 'http') !== false) ? $create_status['subscription_url'] : $panel_fetch['login_link'] . $create_status['subscription_url'];
					$sql->query("UPDATE `users` SET `count_service` = count_service + 1, `test_account` = 'yes' WHERE `from_id` = '$from_id'");
					$sql->query("INSERT INTO `test_account` (`from_id`, `location`, `date`, `volume`, `link`, `price`, `code`, `status`) VALUES ('$from_id', '{$panel_fetch['name']}', '{$test_account_setting['date']}', '{$test_account_setting['volume']}', '$links', '0', '$code', 'active')");
					deleteMessage($from_id, $message_id + 1);
					sendMessage($from_id, sprintf($texts['create_test_account'], $test_account_setting['time'], $subscribe, $panel_fetch['name'], $test_account_setting['time'], $test_account_setting['volume'], base64_encode($code)), $start_key);
				} else {
					deleteMessage($from_id, $message_id + 1);
					sendMessage($from_id, sprintf($texts['create_error'], 1), $start_key);
				}
			}

			if ($panel_fetch['type'] == 'sanayi') {
				include_once 'api/sanayi.php';
				$code = rand(111111, 999999);
				$name = base64_encode($code) . '_' . $from_id;
				$xui = new Sanayi($panel_fetch['login_link'], $panel_fetch['token']);
				$san_setting = $sql->query("SELECT * FROM `sanayi_panel_setting` WHERE `code` = '{$panel_fetch['code']}'")->fetch_assoc();
				$create_service = $xui->addClient($name, $san_setting['inbound_id'], $test_account_setting['volume'], ($test_account_setting['time'] / 24));
				$create_status = json_decode($create_service, true);
				$link = str_replace(['%s1', '%s2', '%s3'], [$create_status['results']['id'], str_replace(parse_url($panel_fetch['login_link'])['port'], json_decode($xui->getPortById($san_setting['inbound_id']), true)['port'], str_replace(['https://', 'http://'], ['', ''], $panel_fetch['login_link'])), $create_status['results']['remark']], $san_setting['example_link']);
				# ---------------- –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫ ---------------- #
				if ($create_status['status'] == false) {
				sendMessage($from_id, sprintf($texts['create_error'], 1), $start_key);
				exit();
				}
				# ---------------------------------------------- #
				$sql->query("UPDATE `users` SET `count_service` = count_service + 1, `test_account` = 'yes' WHERE `from_id` = '$from_id'");
				$sql->query("INSERT INTO `test_account` (`from_id`, `location`, `date`, `volume`, `link`, `price`, `code`, `status`) VALUES ('$from_id', '{$panel_fetch['name']}', '{$test_account_setting['date']}', '{$test_account_setting['volume']}', '$link', '0', '$code', 'active')");
				deleteMessage($from_id, $message_id + 1);
				sendMessage($from_id, sprintf($texts['create_test_account'], $test_account_setting['time'], $link, $panel_fetch['name'], $test_account_setting['time'], $test_account_setting['volume'], base64_encode($code)), $start_key);
			}
		} catch (\Throwable $e) {
			sendMessage($config['dev'], $e);
		}

	} else {
		sendMessage($from_id, $texts['already_test_account'], $start_key);
	}
}

elseif ($text == 'üõç –ú–æ–∏ —Å–µ—Ä–≤–∏—Å—ã' or $data == 'back_services') {
	$services = $sql->query("SELECT * FROM `orders` WHERE `from_id` = '$from_id'");
	if ($services->num_rows > 0) {
		while ($row = $services->fetch_assoc()) {
			$status = ($row['status'] == 'active') ? 'üü¢ | ' : 'üî¥ | ';
			$key[] = ['text' => $status . base64_encode($row['code']) . ' - ' . $row['location'], 'callback_data' => 'service_status-'.$row['code']];
		}
		$key = array_chunk($key, 1);
		$key = json_encode(['inline_keyboard' => $key]);
		if (isset($text)) {
			sendMessage($from_id, sprintf($texts['my_services'], $services->num_rows), $key);
		} else {
			editMessage($from_id, sprintf($texts['my_services'], $services->num_rows), $message_id, $key);
		}
	} else {
		if (isset($text)) {
			sendMessage($from_id, $texts['my_services_not_found'], $start_key);
		} else {
			editMessage($from_id, $texts['my_services_not_found'], $message_id, $start_key);
		}
	}
}

elseif (strpos($data, 'service_status-') !== false) {
	$code = explode('-', $data)[1];
	$getService = $sql->query("SELECT * FROM `orders` WHERE `code` = '$code'")->fetch_assoc();
	$panel = $sql->query("SELECT * FROM `panels` WHERE `name` = '{$getService['location']}'")->fetch_assoc();

	if ($panel['type'] == 'marzban') {

		$getUser = getUserInfo(base64_encode($code) . '_' . $from_id, $panel['token'], $panel['login_link']);
		if (isset($getUser['links']) and $getUser != false) {
			$links = implode("\n\n", $getUser['links']) ?? 'NULL';
			$subscribe = (strpos($getUser['subscription_url'], 'http') !== false) ? $getUser['subscription_url'] : $panel['login_link'] . $getUser['subscription_url'];
			$note = $sql->query("SELECT * FROM `notes` WHERE `code` = '$code'");

			$manage_service_btns = json_encode(['inline_keyboard' => [    
				// [['text' => '–¢–µ–∫—Å—Ç', 'callback_data' => 'access_settings-'.$code.'-marzban']],
				[['text' => '–ö—É–ø–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—ä–µ–º', 'callback_data' => 'buy_extra_volume-'.$code.'-marzban'], ['text' => '–£–≤–µ–ª–∏—á–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω–æ–µ –≤—Ä–µ–º—è', 'callback_data' => 'buy_extra_time-'.$code.'-marzban']],
				[['text' => '–ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–º–µ—Ç–∫—É', 'callback_data' => 'write_note-'.$code.'-marzban'], ['text' => '–ü–æ–ª—É—á–∏—Ç—å QrCode', 'callback_data' => 'getQrCode-'.$code.'-marzban']],
				[['text' => 'üîô –ù–∞–∑–∞–¥', 'callback_data' => 'back_services']]
			]]);
			if ($note->num_rows == 0) {
				editMessage($from_id, sprintf($texts['your_service'], ($getUser['status'] == 'active') ? 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' : 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω', $getService['location'], base64_encode($code), Conversion($getUser['used_traffic'], 'GB'), Conversion($getUser['data_limit'], 'GB'), date('Y-d-m H:i:s',  $getUser['expire']), $subscribe), $message_id, $manage_service_btns);
			} else {
				$note = $note->fetch_assoc();
				editMessage($from_id, sprintf($texts['your_service_with_note'], ($getUser['status'] == 'active') ? 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' : 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω', $note['note'],$getService['location'], base64_encode($code), Conversion($getUser['used_traffic'], 'GB'), Conversion($getUser['data_limit'], 'GB'), date('Y-d-m H:i:s',  $getUser['expire']), $subscribe), $message_id, $manage_service_btns);
			}
		} else {
			$sql->query("DELETE FROM `orders` WHERE `code` = '$code'");
			alert($texts['not_found_service']);
		}

	} elseif ($panel['type'] == 'sanayi') {

		include_once 'api/sanayi.php';
		$san_setting = $sql->query("SELECT * FROM `sanayi_panel_setting` WHERE `code` = '{$panel['code']}'")->fetch_assoc();
		$xui = new Sanayi($panel['login_link'], $panel['token']);
		$getUser = $xui->getUserInfo(base64_encode($code) . '_' . $from_id, $san_setting['inbound_id']);
		$getUser = json_decode($getUser, true);
		if ($getUser['status']) {
			$note = $sql->query("SELECT * FROM `notes` WHERE `code` = '$code'");
			$order = $sql->query("SELECT * FROM `orders` WHERE `code` = '$code'")->fetch_assoc();
			$link = $order['link'];

            $manage_service_btns = json_encode(['inline_keyboard' => [    
				// [['text' => '–¢–µ–∫—Å—Ç', 'callback_data' => 'access_settings-'.$code.'-marzban']],
				[['text' => '–ö—É–ø–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—ä–µ–º', 'callback_data' => 'buy_extra_volume-'.$code.'-marzban'], ['text' => '–£–≤–µ–ª–∏—á–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω–æ–µ –≤—Ä–µ–º—è', 'callback_data' => 'buy_extra_time-'.$code.'-marzban']],
				[['text' => '–ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–º–µ—Ç–∫—É', 'callback_data' => 'write_note-'.$code.'-marzban'], ['text' => '–ü–æ–ª—É—á–∏—Ç—å QrCode', 'callback_data' => 'getQrCode-'.$code.'-marzban']],
				[['text' => 'üîô –ù–∞–∑–∞–¥', 'callback_data' => 'back_services']]
			]]);
			if ($note->num_rows == 0) {
				editMessage($from_id, sprintf($texts['your_service'], ($getUser['status'] == 'active') ? 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' : 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω', $getService['location'], base64_encode($code), Conversion($getUser['used_traffic'], 'GB'), Conversion($getUser['data_limit'], 'GB'), date('Y-d-m H:i:s',  $getUser['expire']), $subscribe), $message_id, $manage_service_btns);
			} else {
				$note = $note->fetch_assoc();
				editMessage($from_id, sprintf($texts['your_service_with_note'], ($getUser['status'] == 'active') ? 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' : 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω', $note['note'],$getService['location'], base64_encode($code), Conversion($getUser['used_traffic'], 'GB'), Conversion($getUser['data_limit'], 'GB'), date('Y-d-m H:i:s',  $getUser['expire']), $subscribe), $message_id, $manage_service_btns);
			}
		} else {
			$sql->query("DELETE FROM `orders` WHERE `code` = '$code'");
			alert($texts['not_found_service']);
		}

	} elseif ($panel['type'] == 'sanayi') {

		include_once 'api/sanayi.php';
		$san_setting = $sql->query("SELECT * FROM `sanayi_panel_setting` WHERE `code` = '{$panel['code']}'")->fetch_assoc();
		$xui = new Sanayi($panel['login_link'], $panel['token']);
		$getUser = $xui->getUserInfo(base64_encode($code) . '_' . $from_id, $san_setting['inbound_id']);
		$getUser = json_decode($getUser, true);
		if ($getUser['status']) {
			$note = $sql->query("SELECT * FROM `notes` WHERE `code` = '$code'");
			$order = $sql->query("SELECT * FROM `orders` WHERE `code` = '$code'")->fetch_assoc();
			$link = $order['link'];
			
			$manage_service_btns = json_encode(['inline_keyboard' => [
			// [['text' => '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞', 'callback_data' => 'access_settings-'.$code.'-sanayi']],
			[['text' => '–ö—É–ø–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—ä–µ–º', 'callback_data' => 'buy_extra_volume-'.$code.'-sanayi'], ['text' => '–£–≤–µ–ª–∏—á–∏—Ç—å –≤—Ä–µ–º—è –∫—Ä–µ–¥–∏—Ç–∞', 'callback_data' => 'buy_extra_time-'.$code.'-sanayi']],
			[['text' => '–ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–º–µ—Ç–∫—É', 'callback_data' => 'write_note-'.$code.'-sanayi'], ['text' => '–ü–æ–ª—É—á–∏—Ç—å QrCode', 'callback_data' => 'getQrCode-'.$code.'-sanayi']],
			[['text' => 'üîô –ù–∞–∑–∞–¥', 'callback_data' => 'back_services']]
		]]);

		if ($note->num_rows == 0) {
			editMessage($from_id, sprintf($texts['your_service'], ($getUser['result']['enable'] == true) ? 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' : 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω', $getService['location'], base64_encode($code), Conversion($getUser['result']['up'] + $getUser['result']['down'], 'GB'), ($getUser['result']['total'] == 0) ? '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω' : Conversion($getUser['result']['total'], 'GB') . ' MB', date('Y-d-m H:i:s',  $getUser['result']['expiryTime']), $link), $message_id, $manage_service_btns);
		} else {
			$note = $note->fetch_assoc();
			editMessage($from_id, sprintf($texts['your_service_with_note'], ($getUser['result']['enable'] == true) ? 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' : 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω', $note['note'], $getService['location'], base64_encode($code), Conversion($getUser['result']['up'] + $getUser['result']['down'], 'GB'), ($getUser['result']['total'] == 0) ? '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω' : Conversion($getUser['result']['total'], 'GB') . ' MB', date('Y-d-m H:i:s',  $getUser['result']['expiryTime']), $link), $message_id, $manage_service_btns);
		} else {
			$sql->query("DELETE FROM `orders` WHERE `code` = '$code'");
			alert($texts['not_found_service']);
		}
	}
}

elseif (strpos($data, 'getQrCode') !== false) {
    alert($texts['wait']);

    $code = explode('-', $data)[1];
    $type = explode('-', $data)[2];
    $getService = $sql->query("SELECT * FROM `orders` WHERE `code` = '$code'")->fetch_assoc();
    $panel = $sql->query("SELECT * FROM `panels` WHERE `name` = '{$getService['location']}'")->fetch_assoc();

    if ($type == 'marzban') {
        $token = loginPanel($panel['login_link'], $panel['username'], $panel['password'])['access_token'];
        $getUser = getUserInfo(base64_encode($code) . '_' . $from_id, $token, $panel['login_link']);
        if (isset($getUser['links']) and $getUser != false) {
            $subscribe = (strpos($getUser['subscription_url'], 'http') !== false) ? $getUser['subscription_url'] : $panel['login_link'] . $getUser['subscription_url'];
            $encode_url = urldecode($subscribe);
            bot('sendPhoto', ['chat_id' => $from_id, 'photo' => "https://api.qrserver.com/v1/create-qr-code/?data=$encode_url&size=800x800", 'caption' => "<code>$subscribe</code>", 'parse_mode' => 'html']);
        } else {
            alert('‚ùå –û—à–∏–±–∫–∞', true);
        }
    } elseif ($type == 'sanayi') {
        $order = $sql->query("SELECT * FROM `orders` WHERE `code` = '$code'")->fetch_assoc();
        $link = $order['link'];
        $encode_url = urlencode($link);
        bot('sendPhoto', ['chat_id' => $from_id, 'photo' => "https://api.qrserver.com/v1/create-qr-code/?data=$encode_url&size=800x800", 'caption' => "<code>$link</code>", 'parse_mode' => 'html']);
    } else {
        alert('‚ùå –û—à–∏–±–∫–∞ -> —Ç–∏–ø –Ω–µ –Ω–∞–π–¥–µ–Ω!', true);
    }
}

elseif (strpos($data, 'write_note') !== false) {
    $code = explode('-', $data)[1];
    $type = explode('-', $data)[2];
    step('set_note-'.$code.'-'.$type);
    deleteMessage($from_id, $message_id);
    sendMessage($from_id, sprintf($texts['send_note'], $code), $back);
}

elseif (strpos($user['step'], 'set_note') !== false) {
    $code = explode('-', $user['step'])[1];
    $type = explode('-', $user['step'])[2];
    if ($sql->query("SELECT `code` FROM `notes` WHERE `code` = '$code'")->num_rows == 0) {
        $sql->query("INSERT INTO `notes` (`note`, `code`, `type`, `status`) VALUES ('$text', '$code', '$type', 'active')");
    } else {
        $sql->query("UPDATE `notes` SET `note` = '$text' WHERE `code` = '$code'");
    }
    sendMessage($from_id, sprintf($texts['set_note_success'], $code), $start_key);
}

elseif (strpos($data, 'buy_extra_time') !== false) {
    $code = explode('-', $data)[1];
    $type = explode('-', $data)[2];
    $category_date = $sql->query("SELECT * FROM `category_date` WHERE `status` = 'active'");

    if ($category_date->num_rows > 0) {
        while ($row = $category_date->fetch_assoc()) {
            $key[] = ['text' => $row['name'], 'callback_data' => 'select_extra_time-'.$row['code'].'-'.$code];
        }
        $key = array_chunk($key, 2);
        $key[] = [['text' => 'üîô –ù–∞–∑–∞–¥', 'callback_data' => 'service_status-'.$code]];
        $key = json_encode(['inline_keyboard' => $key]);
        editMessage($from_id, sprintf($texts['select_extra_time_plan'], $code), $message_id, $key);
    } else {
        alert($texts['not_found_plan_extra_time'], true);
    }
}

elseif (strpos($data, 'buy_extra_volume') !== false) {
    $code = explode('-', $data)[1];
    $type = explode('-', $data)[2];
    $category_limit = $sql->query("SELECT * FROM `category_limit` WHERE `status` = 'active'");

    if ($category_limit->num_rows > 0) {
        while ($row = $category_limit->fetch_assoc()) {
            $key[] = ['text' => $row['name'], 'callback_data' => 'select_extra_volume-'.$row['code'].'-'.$code];
        }
        $key = array_chunk($key, 2);
        $key[] = [['text' => 'üîô –ù–∞–∑–∞–¥', 'callback_data' => 'service_status-'.$code]];
        $key = json_encode(['inline_keyboard' => $key]);
        editMessage($from_id, sprintf($texts['select_extra_volume_plan'], $code), $message_id, $key);
    } else {
        alert($texts['not_found_plan_extra_volume'], true);
    }
}
elseif ($data == 'cancel_buy') {
    step('none');
    deleteMessage($from_id, $message_id);
    sendMessage($from_id, $texts['cancel_extra_factor'], $start_key);
}

elseif (strpos($data, 'select_extra_time') !== false) {
    $service_code = explode('-', $data)[2];
    $plan_code = explode('-', $data)[1];
    $service = $sql->query("SELECT * FROM `orders` WHERE `code` = '$service_code'")->fetch_assoc();
    $plan = $sql->query("SELECT * FROM `category_date` WHERE `code` = '$plan_code'")->fetch_assoc();
    
    $access_key = json_encode(['inline_keyboard' => [
        [['text' => '‚ùå –û—Ç–º–µ–Ω–∞', 'callback_data' => 'cancel_buy'], ['text' => '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'callback_data' => 'confirm_extra_time-'.$service_code.'-'.$plan_code]],
    ]]);
    
    editMessage($from_id, sprintf($texts['create_buy_extra_time_factor'], $service_code, $service_code, $plan['name'], number_format($plan['price']), $service_code), $message_id, $access_key);
}

elseif (strpos($data, 'confirm_extra_time') !== false) {
    alert($texts['wait']);
    $service_code = explode('-', $data)[1];
    $plan_code = explode('-', $data)[2];
    $service = $sql->query("SELECT * FROM `orders` WHERE `code` = '$service_code'")->fetch_assoc();
    $plan = $sql->query("SELECT * FROM `category_date` WHERE `code` = '$plan_code'")->fetch_assoc();
    $getService = $sql->query("SELECT * FROM `orders` WHERE `code` = '$service_code'")->fetch_assoc();
    $panel = $sql->query("SELECT * FROM `panels` WHERE `name` = '{$getService['location']}'")->fetch_assoc();

    if ($user['coin'] >= $plan['price']) {
        if ($service['type'] == 'marzban') {
            $token = loginPanel($panel['login_link'], $panel['username'], $panel['password'])['access_token'];
            $getUser = getUserInfo(base64_encode($service_code) . '_' . $from_id, $token, $panel['login_link']);
            $response = Modifyuser(base64_encode($service_code) . '_' . $from_id, array('expire' => $getUser['expire'] += 86400 * $plan['date']), $token, $panel['login_link']);
        } elseif ($service['type'] == 'sanayi') {
            include_once 'api/sanayi.php';
            $panel_setting = $sql->query("SELECT * FROM `sanayi_panel_setting` WHERE `code` = '{$panel['code']}'")->fetch_assoc();
            $xui = new Sanayi($panel['login_link'], $panel['token']);
            $getUser = $xui->getUserInfo(base64_encode($service_code) . '_' . $from_id, $panel_setting['inbound_id']);
            $getUser = json_decode($getUser, true);
            if ($getUser['status'] == true) {
                $response = $xui->addExpire(base64_encode($service_code) . '_' . $from_id, $plan['date'], $panel_setting['inbound_id']);
                // sendMessage($from_id, $response);
            } else {
                alert('‚ùå –û—à–∏–±–∫–∞ --> —É—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            }
        }

        $sql->query("UPDATE `users` SET `coin` = coin - {$plan['price']} WHERE `from_id` = '$from_id'");
        deleteMessage($from_id, $message_id);
        sendMessage($from_id, sprintf($texts['success_extra_time'], $plan['date'], $plan['name'], number_format($plan['price'])), $start_key);
    } else {
        alert($texts['not_coin_extra'], true);
    }
}

elseif (strpos($data, 'select_extra_volume') !== false) {
    $service_code = explode('-', $data)[2];
    $plan_code = explode('-', $data)[1];
    $service = $sql->query("SELECT * FROM `orders` WHERE `code` = '$service_code'")->fetch_assoc();
    $plan = $sql->query("SELECT * FROM `category_limit` WHERE `code` = '$plan_code'")->fetch_assoc();
    
    $access_key = json_encode(['inline_keyboard' => [
        [['text' => '‚ùå –û—Ç–º–µ–Ω–∞', 'callback_data' => 'cancel_buy'], ['text' => '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'callback_data' => 'confirm_extra_volume-'.$service_code.'-'.$plan_code]],
    ]]);
    
    editMessage($from_id, sprintf($texts['create_buy_extra_volume_factor'], $service_code, $service_code, $plan['name'], number_format($plan['price']), $service_code), $message_id, $access_key);
}

elseif (strpos($data, 'confirm_extra_volume') !== false) {
    alert($texts['wait']);
    $service_code = explode('-', $data)[1];
    $plan_code = explode('-', $data)[2];
    $service = $sql->query("SELECT * FROM `orders` WHERE `code` = '$service_code'")->fetch_assoc();
    $plan = $sql->query("SELECT * FROM `category_limit` WHERE `code` = '$plan_code'")->fetch_assoc();
    $getService = $sql->query("SELECT * FROM `orders` WHERE `code` = '$service_code'")->fetch_assoc();
    $panel = $sql->query("SELECT * FROM `panels` WHERE `name` = '{$getService['location']}'")->fetch_assoc();

    if ($user['coin'] >= $plan['price']) {
        if ($service['type'] == 'marzban') {
            $token = loginPanel($panel['login_link'], $panel['username'], $panel['password'])['access_token'];
            $getUser = getUserInfo(base64_encode($service_code) . '_' . $from_id, $token, $panel['login_link']);
            $response = Modifyuser(base64_encode($service_code) . '_' . $from_id, array('data_limit' => $getUser['data_limit'] += $plan['limit'] * pow(1024, 3)), $token, $panel['login_link']);
        } elseif ($service['type'] == 'sanayi') {
            include_once 'api/sanayi.php';
            $panel_setting = $sql->query("SELECT * FROM `sanayi_panel_setting` WHERE `code` = '{$panel['code']}'")->fetch_assoc();
            $xui = new Sanayi($panel['login_link'], $panel['token']);
            $getUser = $xui->getUserInfo(base64_encode($service_code) . '_' . $from_id, $panel_setting['inbound_id']);
            $getUser = json_decode($getUser, true);
            if ($getUser['status'] == true) {
                $response = $xui->addVolume(base64_encode($service_code) . '_' . $from_id, $plan['limit'], $panel_setting['inbound_id']);
            } else {
                alert('‚ùå –û—à–∏–±–∫–∞ --> —É—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            }
        }

        $sql->query("UPDATE `users` SET `coin` = coin - {$plan['price']} WHERE `from_id` = '$from_id'");
        deleteMessage($from_id, $message_id);
        sendMessage($from_id, sprintf($texts['success_extra_volume'], $plan['limit'], $plan['name'], number_format($plan['price'])), $start_key);
    } else {
        alert($texts['not_coin_extra'], true);
    }
}

elseif ($text == 'üí∏ –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç') {
    if ($auth_setting['status'] == 'active') {
        if ($auth_setting['iran_number'] == 'active' or $auth_setting['virtual_number'] == 'active' or $auth_setting['both_number'] == 'active') {
            if (is_null($user['phone'])) {
                step('authentication');
                sendMessage($from_id, $texts['send_phone'], $send_phone);
            } else {
                step('diposet');
                sendMessage($from_id, $texts['diposet'], $back);
            }
        } else {
            step('diposet');
            sendMessage($from_id, $texts['diposet'], $back);
        }
    } else {
        step('diposet');
        sendMessage($from_id, $texts['diposet'], $back);
    }
}

elseif ($user['step'] == 'authentication') {
    $contact = $update->message->contact;
    if (isset($contact)) {
        if ($contact->user_id == $from_id) {
            if ($auth_setting['iran_number'] == 'active') {
                if (strpos($contact->phone_number, '+98') !== false) {
                    $sql->query("UPDATE `users` SET `phone` = '{$contact->phone_number}' WHERE `from_id` = '$from_id'");
                    sendMessage($from_id, $texts['send_phone_success'], $start_key);
                } else {
                    sendMessage($from_id, $texts['only_iran'], $back);
                }
            } elseif ($auth_setting['virtual_number'] == 'active') {
                if (strpos($contact->phone_number, '+98') === false) {
                    $sql->query("UPDATE `users` SET `phone` = '{$contact->phone_number}' WHERE `from_id` = '$from_id'");
                    sendMessage($from_id, $texts['send_phone_success'], $start_key);
                } else {
                    sendMessage($from_id, $texts['only_virtual'], $back);
                }
            } elseif ($auth_setting['both_number'] == 'active') {
                $sql->query("UPDATE `users` SET `phone` = '{$contact->phone_number}' WHERE `from_id` = '$from_id'");
                sendMessage($from_id, $texts['send_phone_success'], $start_key);   
            }
        } else {
            sendMessage($from_id, $texts['send_phone_with_below_btn'], $send_phone);    
        }
    } else {
        sendMessage($from_id, $texts['send_phone_with_below_btn'], $send_phone);
    }
}
elseif ($user['step'] == 'diposet') {
    if (is_numeric($text) and $text >= 2000) {
        step('sdp-' . $text);
        sendMessage($from_id, sprintf($texts['select_diposet_payment'], number_format($text)), $select_diposet_payment);
    } else {
        sendMessage($from_id, $texts['diposet_input_invalid'], $back);
    }
}

elseif ($data == 'cancel_payment_proccess') {
    step('none');
    deleteMessage($from_id, $message_id);
    sendMessage($from_id, sprintf($texts['start'], $first_name), $start_key);
}

elseif (in_array($data, ['zarinpal', 'idpay']) and strpos($user['step'], 'sdp-') !== false) {
    if ($payment_setting[$data . '_status'] == 'active') {
        $status = $sql->query("SELECT `{$data}_token` FROM `payment_setting`")->fetch_assoc()[$data . '_token'];
        if ($status != 'none') {
            step('none');
            $price = explode('-', $user['step'])[1];
            $code = rand(11111111, 99999999);
            $sql->query("INSERT INTO `factors` (`from_id`, `price`, `code`, `status`) VALUES ('$from_id', '$price', '$code', 'no')");
            $response = ($data == 'zarinpal') ? zarinpalGenerator($from_id, $price, $code) : idpayGenerator($from_id, $price, $code);
            if ($response) $pay = json_encode(['inline_keyboard' => [[['text' => 'üíµ –û–ø–ª–∞—Ç–∏—Ç—å', 'url' => $response]]]]);
            deleteMessage($from_id, $message_id);
            sendMessage($from_id, sprintf($texts['create_diposet_factor'], $code, number_format($price)), $pay);
            sendMessage($from_id, $texts['back_to_menu'], $start_key);
        } else {
            alert($texts['error_choice_pay']);
        }
    } else {
        alert($texts['not_active_payment']);
    }
}

elseif ($data == 'nowpayment' and strpos($user['step'], 'sdp-') !== false) {
    if ($payment_setting[$data . '_status'] == 'active') {
        alert('‚è± –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.');
        if ($payment_setting[$data . '_status'] == 'active') {
            $code = rand(111111, 999999);
            $price = explode('-', $user['step'])[1];
            $dollar = json_decode(file_get_contents($config['domain'] . '/api/arz.php'), true)['price'];
            $response_gen = nowPaymentGenerator((intval($price) / intval($dollar)), 'usd', 'trx', $code);
            if (!is_null($response_gen)) {
                $response = json_decode($response_gen, true);
                $sql->query("INSERT INTO `factors` (`from_id`, `price`, `code`, `status`) VALUES ('$from_id', '$price', '{$response['payment_id']}', 'no')");
                $key = json_encode(['inline_keyboard' => [[['text' => '‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª', 'callback_data' => 'checkpayment-' . $response['payment_id']]]]]);
                deleteMessage($from_id, $message_id);
                sendMessage($from_id, sprintf($texts['create_nowpayment_factor'], $response['payment_id'], number_format($price), number_format($dollar), $response['pay_amount'], $response['pay_address']), $key);
                sendMessage($from_id, $texts['back_to_menu'], $start_key);
            } else {
                deleteMessage($from_id, $message_id);
                sendMessage($from_id, $texts['error_nowpayment'] . "\n‚óΩ- <code>USDT: $dollar</code>", $start_key);
            }
        } else {
            alert($texts['not_active_payment']);
        }
    } else {
        alert($texts['not_active_payment']);
    }
}

elseif (strpos($data, 'checkpayment') !== false) {
    $payment_id = explode('-', $data)[1];
    $get = checkNowPayment($payment_id);
    $status = json_decode($get, true)['payment_status'];
    if ($status != 'waiting') {
        $factor = $sql->query("SELECT * FROM `factors` WHERE `code` = '$payment_id'")->fetch_assoc();
        if ($factor['status'] == 'no') {
            $sql->query("UPDATE `users` SET `coin` = coin + {$factor['price']}, `count_charge` = count_charge + 1 WHERE `from_id` = '$from_id'");
            $sql->query("UPDATE `factors` SET `status` = 'yes' WHERE `code` = '$payment_id'");
            deleteMessage($from_id, $message_id);
            sendMessage($from_id, sprintf($texts['success_nowpayment'], number_format($factor['price'])), $start_key);
            // sendMessage($config['dev'], $texts['success_payment_notif']);
        } else {
            alert($texts['not_success_nowpayment']);
        }
    } else {
        alert($texts['not_success_nowpayment']);
    }
}

elseif ($data == 'kart') {
	if ($payment_setting['card_status'] == 'active') {
	    $price = explode('-', $user['step'])[1];
	    step('send_fish-'.$price);
	    $code = rand(11111111, 99999999);
	    $card_number = $sql->query("SELECT `card_number` FROM `payment_setting`")->fetch_assoc()['card_number'];
	    $card_number_name = $sql->query("SELECT `card_number_name` FROM `payment_setting`")->fetch_assoc()['card_number_name'];
	    deleteMessage($from_id, $message_id);
	    sendMessage($from_id, sprintf($texts['create_kart_factor'], $code, number_format($price), ($card_number != 'none') ? $card_number : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ', ($card_number_name != 'none') ? $card_number_name : ''), $back);
	} else {
        alert($texts['not_active_payment']);
    }
}

elseif (strpos($user['step'], 'send_fish') !== false) {
    $price = explode('-', $user['step'])[1];
    if (isset($update->message->photo)) {
        step('none');
        $key = json_encode(['inline_keyboard' => [[['text' => '‚ùå', 'callback_data' => 'cancel_fish-'.$from_id], ['text' => '‚úÖ', 'callback_data' => 'accept_fish-'.$from_id.'-'.$price]]]]);
        sendMessage($from_id, $texts['success_send_fish'], $start_key);
        sendMessage($config['dev'], sprintf($texts['success_send_fish_notif'], $from_id, $username, $price), $key);
        forwardMessage($from_id, $config['dev'], $message_id);
        if (!is_null($settings['log_channel'])) {
            sendMessage($settings['log_channel'], sprintf($texts['success_send_fish_notif'], $from_id, $username, $price));
            forwardMessage($from_id, $settings['log_channel'], $message_id);
        }
    } else {
        sendMessage($from_id, $texts['error_input_kart'], $back);
    }
}

elseif ($text == 'üõí –¢–∞—Ä–∏—Ñ—ã —É—Å–ª—É–≥') {
    sendMessage($from_id, $texts['service_tariff']);
}


elseif ($text == 'üë§ –ü—Ä–æ—Ñ–∏–ª—å') {
    $count_all = $sql->query("SELECT * FROM `orders` WHERE `from_id` = '$from_id'")->num_rows;
    $count_all_active = $sql->query("SELECT * FROM `orders` WHERE `from_id` = '$from_id' AND `status` = 'active'")->num_rows;
    $count_all_inactive = $sql->query("SELECT * FROM `orders` WHERE `from_id` = '$from_id' AND `status` = 'inactive'")->num_rows;
    sendMessage($from_id, sprintf($texts['my_account'], $from_id, number_format($user['coin']), $count_all, $count_all_active, $count_all_inactive), $start_key);
}

elseif ($text == 'üìÆ –û–Ω–ª–∞–π–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–∞') {
    step('support');
    sendMessage($from_id, $texts['support'], $back);
}

elseif ($user['step'] == 'support') {
    step('none');
    sendMessage($from_id, $texts['success_support'], $start_key);
    sendMessage($config['dev'], sprintf($texts['new_support_message'], $from_id, $from_id, $username, $user['coin']), $manage_user);
    forwardMessage($from_id, $config['dev'], $message_id);
}

elseif ($text == 'üîó –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é') {
    step('select_sys');
    sendMessage($from_id, $texts['select_sys'], $education);
}

elseif (strpos($data, 'edu') !== false) {
    $sys = explode('_', $data)[1];
    deleteMessage($from_id, $message_id);
    sendMessage($from_id, $texts['edu_'.$sys], $education);
}

# ------------ –ü–∞–Ω–µ–ª—å ------------ #

$admins = $sql->query("SELECT * FROM `admins`")->fetch_assoc() ?? [];
if ($from_id == $config['dev'] or in_array($from_id, $admins)) {
    if (in_array($text, ['/panel', 'panel', 'üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', '–ø–∞–Ω–µ–ª—å', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é'])) {
        step('panel');
        sendMessage($from_id, "üëÆ‚Äç‚ôÇÔ∏è - –ü—Ä–∏–≤–µ—Ç, —É–≤–∞–∂–∞–µ–º—ã–π –∞–¥–º–∏–Ω [ <b>$first_name</b> ] !\n\n‚ö°Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –±–æ—Ç–∞.\nüóÉ –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞: <code>{$config['version']}</code>\n\n‚öôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º:\n\nü§ñ | –ß—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏ –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏–π –±–æ—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª Proxygram:‚Üì\n‚óΩÔ∏è@Proxygram\nü§ñ –ò —Ç–∞–∫–∂–µ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º –∏–ª–∏ –æ—à–∏–±–∫–∞–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –≥—Ä—É–ø–ø–µ ProxygramHUB:‚Üì\n‚óΩÔ∏è@ProxygramHUB", $panel);
    }

    elseif($text == 'üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –±–æ—Ç–∞'){
        sendMessage($from_id, "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –±–æ—Ç–∞.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:\n\n‚óΩÔ∏è@Proxygram", $manage_statistics);
    }

    elseif($text == 'üåê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–º'){
        sendMessage($from_id, "‚öôÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞–º–∏.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ :\n\n‚óΩÔ∏è@Proxygram", $manage_server);
    }

    elseif($text == 'üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏'){
        sendMessage($from_id, "üë§ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ :\n\n‚óΩÔ∏è@Proxygram", $manage_user);
    }

    elseif($text == 'üì§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º'){
        sendMessage($from_id, "üì§ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ :\n\n‚óΩÔ∏è@Proxygram", $manage_message);
    }

    elseif($text == 'üëÆ‚Äç‚ôÇÔ∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏'){
        sendMessage($from_id, "üëÆ‚Äç‚ôÇÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ :\n\n‚óΩÔ∏è@Proxygram", $manage_admin);
    }

    elseif($text == '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'){
        sendMessage($from_id, "‚öôÔ∏èÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ :\n\n‚óΩÔ∏è@Proxygram", $manage_setting);
    }

    // ----------- –Ω–µ —Ç—Ä–æ–≥–∞–π—Ç–µ —ç—Ç—É —á–∞—Å—Ç—å ----------- //
    elseif ($text == base64_decode('YmFzZTY0X2RlY29kZQ==')('8J+TniDYp9i32YTYp9i524zZhyDYotm+2K/bjNiqINix2KjYp9iq')) {
        base64_decode('c2VuZE1lc3NhZ2U=')($from_id, base64_decode('8J+QnSB8INio2LHYp9uMINin2LfZhNin2Lkg2KfYsiDYqtmF2KfZhduMINii2b7Yr9uM2Kog2YfYpyDZiCDZhtiz2K7ZhyDZh9in24wg2KjYudiv24wg2LHYqNin2Kog2LLZhtio2YjYsSDZvtmG2YQg2K/YsSDaqdin2YbYp9mEINiy2YbYqNmI2LEg2b7ZhtmEINi52LbZiCDYtNuM2K8gOuKGkwril73vuI9AWmFuYm9yUGFuZWwK8J+QnSB8INmIINmH2YXahtmG24zZhiDYqNix2KfbjCDZhti42LEg2K/Zh9uMINii2b7Yr9uM2Kog24zYpyDYqNin2q8g2YfYpyDYqNmHINqv2LHZiNmHINiy2YbYqNmI2LEg2b7ZhtmEINio2b7bjNmI2YbYr9uM2K8gOuKGkwril73vuI9AWmFuYm9yUGFuZWxHYXAK8J+QnSB8INmG2YXZiNmG2Ycg2LHYqNin2Kog2KLYrtix24zZhiDZhtiz2K7ZhyDYsdio2KfYqiDYstmG2KjZiNixINm+2YbZhCA64oaTCuKXve+4j0BaYW5ib3JQYW5lbEJvdA=='), $panel);
    }

    // ----------- —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π ----------- //
    elseif ($text == 'üîë –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏' or $data == 'manage_auth') {
        if (isset($text)) {
            sendMessage($from_id, "üÄÑÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±–æ—Ç–∞!\n\nüìö –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É:‚Üì\n\nüü¢ : –ê–∫—Ç–∏–≤–Ω–æ \nüî¥ : –ù–µ–∞–∫—Ç–∏–≤–Ω–æ", $manage_auth);
        } else {
            editMessage($from_id, "üÄÑÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±–æ—Ç–∞!\n\nüìö –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É:‚Üì\n\nüü¢ : –ê–∫—Ç–∏–≤–Ω–æ \nüî¥ : –ù–µ–∞–∫—Ç–∏–≤–Ω–æ", $message_id, $manage_auth);
        }
    }

    elseif ($data == 'change_status_auth') {
        if ($auth_setting['status'] == 'active') {
            $sql->query("UPDATE `auth_setting` SET `status` = 'inactive'");
        } else {
            $sql->query("UPDATE `auth_setting` SET `status` = 'active'");
        }
        alert('‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.', true);
        editMessage($from_id, "üÜô –ß—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!", $message_id, json_encode(['inline_keyboard' => [[['text' => 'üîé –û–±–Ω–æ–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è', 'callback_data' => 'manage_auth']]]]));
    }

    elseif ($data == 'change_status_auth_iran') {
        if ($auth_setting['status'] == 'active') {
            if ($auth_setting['virtual_number'] == 'inactive' and $auth_setting['both_number'] == 'inactive') {
                if ($auth_setting['iran_number'] == 'active') {
                    $sql->query("UPDATE `auth_setting` SET `iran_number` = 'inactive'");
                } else {
                    $sql->query("UPDATE `auth_setting` SET `iran_number` = 'active'");
                }
                alert('‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.', true);
                editMessage($from_id, "üÜô –ß—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!", $message_id, json_encode(['inline_keyboard' => [[['text' => 'üîé –û–±–Ω–æ–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è', 'callback_data' => 'manage_auth']]]]));
            } else {
                alert('‚ö†Ô∏è –ß—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏—Ä–∞–Ω—Å–∫–∏—Ö –Ω–æ–º–µ—Ä–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞–∑–¥–µ–ª—ã ( üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ ) –∏ ( üåé –í—Å–µ –Ω–æ–º–µ—Ä–∞ )!', true);
            }
        } else {
            alert('üî¥ –ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª, —Å–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–¥–µ–ª ( ‚ÑπÔ∏è –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ )!', true);
        }
    }

    elseif ($data == 'change_status_auth_virtual') {
        if ($auth_setting['status'] == 'active') {
            if ($auth_setting['iran_number'] == 'inactive' and $auth_setting['both_number'] == 'inactive') {
                if ($auth_setting['virtual_number'] == 'active') {
                    $sql->query("UPDATE `auth_setting` SET `virtual_number` = 'inactive'");
                } else {
                    $sql->query("UPDATE `auth_setting` SET `virtual_number` = 'active'");
                }
                alert('‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.', true);
                editMessage($from_id, "üÜô –ß—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!", $message_id, json_encode(['inline_keyboard' => [[['text' => 'üîé –û–±–Ω–æ–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è', 'callback_data' => 'manage_auth']]]]));
            } else {
                alert('‚ö†Ô∏è –ß—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞–∑–¥–µ–ª—ã ( üáÆüá∑ –ò—Ä–∞–Ω—Å–∫–∏–µ –Ω–æ–º–µ—Ä–∞ ) –∏ ( üåé –í—Å–µ –Ω–æ–º–µ—Ä–∞ )!', true);
            }
        } else {
            alert('üî¥ –ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª, —Å–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–¥–µ–ª ( ‚ÑπÔ∏è –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ )!', true);
        }
    }

    elseif ($data == 'change_status_auth_all_country') {
        if ($auth_setting['status'] == 'active') {
            if ($auth_setting['iran_number'] == 'inactive' and $auth_setting['virtual_number'] == 'inactive') {
                if ($auth_setting['both_number'] == 'active') {
                    $sql->query("UPDATE `auth_setting` SET `both_number` = 'inactive'");
                } else {
                    $sql->query("UPDATE `auth_setting` SET `both_number` = 'active'");
                }
                alert('‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.', true);
                editMessage($from_id, "üÜô –ß—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!", $message_id, json_encode(['inline_keyboard' => [[['text' => 'üîé –û–±–Ω–æ–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è', 'callback_data' => 'manage_auth']]]]));
            } else {
                alert('‚ö†Ô∏è –ß—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—Å–µ—Ö –Ω–æ–º–µ—Ä–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞–∑–¥–µ–ª—ã ( üáÆüá∑ –ò—Ä–∞–Ω—Å–∫–∏–µ –Ω–æ–º–µ—Ä–∞ ) –∏ ( üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ )!', true);
            }
        } else {
            alert('üî¥ –ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª, —Å–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–¥–µ–ª ( ‚ÑπÔ∏è –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ )!', true);
        }
    }
    // ----------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–º ----------- //
    elseif($text == 'üë§ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞'){
        $state1 = $sql->query("SELECT `status` FROM `users`")->num_rows;
        $state2 = $sql->query("SELECT `status` FROM `users` WHERE `status` = 'inactive'")->num_rows;
        $state3 = $sql->query("SELECT `status` FROM `users` WHERE `status` = 'active'")->num_rows;
        $state4 = $sql->query("SELECT `status` FROM `factors` WHERE `status` = 'yes'")->num_rows;
        sendMessage($from_id, "‚öôÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ —Å–ª–µ–¥—É—é—â–∞—è:‚Üì\n\n‚ñ´Ô∏è–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞: <code>$state1</code> —á–µ–ª–æ–≤–µ–∫\n‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <code>$state2</code> —á–µ–ª–æ–≤–µ–∫\n‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <code>$state3</code> —á–µ–ª–æ–≤–µ–∫\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–∞—Ç–µ–∂–µ–π: <code>$state4</code> —à—Ç—É–∫\n\nü§ñ @Proxygram", $manage_statistics);
    }
    
    // ----------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞–º–∏ ----------- //
    elseif ($text == '‚ùå –û—Ç–º–µ–Ω–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç') {
        step('none');
        if (file_exists('add_panel.txt')) unlink('add_panel.txt');
        sendMessage($from_id, "‚öôÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞–º–∏.\n\nüëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π:\n\n‚óΩÔ∏è@Proxygram", $manage_server);
    }
    
    elseif ($data == 'close_panel') {
        step('none');
        editMessage($from_id, "‚úÖ –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞–º–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞!", $message_id);
    }
    
    elseif ($text == '‚è± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–º –∞–∫–∫–∞—É–Ω—Ç–æ–º' or $data == 'back_account_test') {
        step('none');
        // sendMessage($from_id, "{$test_account_setting['status']} - {$test_account_setting['panel']} - {$test_account_setting['volume']} - {$test_account_setting['time']}");
        // exit();
        if (isset($text)) {
            sendMessage($from_id, "‚è± –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.\n\nüü¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±—ä–µ–º –≤ GB –±–æ—Ç—É. –ù–∞–ø—Ä–∏–º–µ—Ä, 200 –ú–ë: 0.2\nüü¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤—Ä–µ–º—è –≤ —á–∞—Å–∞—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä, 5 —á–∞—Å–æ–≤: 5\n\nüëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π:\n‚óΩÔ∏è@Proxygram", $manage_test_account);
        } else {
            editMessage($from_id, "‚è± –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.\n\nüü¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±—ä–µ–º –≤ GB –±–æ—Ç—É. –ù–∞–ø—Ä–∏–º–µ—Ä, 200 –ú–ë: 0.2\nüü¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤—Ä–µ–º—è –≤ —á–∞—Å–∞—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä, 5 —á–∞—Å–æ–≤: 5\n\nüëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π:\n‚óΩÔ∏è@Proxygram", $message_id, $manage_test_account);
        }
    }
    
    elseif ($data == 'null') {
        alert('#Ô∏è‚É£ –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å–ª—É–∂–µ–±–Ω–∞—è!');
    }
    
    elseif ($data == 'change_test_account_status') {
        $status = $sql->query("SELECT `status` FROM `test_account_setting`")->fetch_assoc()['status'];
        if($status == 'active'){
            $sql->query("UPDATE `test_account_setting` SET `status` = 'inactive'");
        }else{
            $sql->query("UPDATE `test_account_setting` SET `status` = 'active'");
        }
        $manage_test_account = json_encode(['inline_keyboard' => [
            [['text' => ($status == 'active') ? 'üî¥' : 'üü¢', 'callback_data' => 'change_test_account_status'], ['text' => '‚ñ´Ô∏è–°–æ—Å—Ç–æ—è–Ω–∏–µ :', 'callback_data' => 'null']],
            [['text' => ($test_account_setting['panel'] == 'none') ? 'üî¥ –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ' : 'üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ', 'callback_data' => 'change_test_account_panel'], ['text' => '‚ñ´Ô∏è–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ø–∞–Ω–µ–ª–∏ :', 'callback_data' => 'null']],
            [['text' => $sql->query("SELECT * FROM `test_account`")->num_rows, 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ :', 'callback_data' => 'null']],
            [['text' => $test_account_setting['volume'] . ' GB', 'callback_data' => 'change_test_account_volume'], ['text' => '‚ñ´Ô∏è–û–±—ä–µ–º :', 'callback_data' => 'null']],
            [['text' => $test_account_setting['time'] . ' —á–∞—Å–æ–≤', 'callback_data' => 'change_test_account_time'], ['text' => '‚ñ´Ô∏è–í—Ä–µ–º—è :', 'callback_data' => 'null']],
        ]]);
        editMessage($from_id, "‚è± –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.\n\nüëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π:\n‚óΩÔ∏è@Proxygram", $message_id, $manage_test_account);
    }
    
    elseif ($data == 'change_test_account_volume') {
        step('change_test_account_volume');
        editMessage($from_id, "üÜï –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞:", $message_id, $back_account_test);
    }
    
    elseif ($user['step'] == 'change_test_account_volume') {
        if (isset($text)) {
            if (is_numeric($text)) {
                step('none');
                $sql->query("UPDATE `test_account_setting` SET `volume` = '$text'");
                $manage_test_account = json_encode(['inline_keyboard' => [
                    [['text' => ($status == 'active') ? 'üî¥' : 'üü¢', 'callback_data' => 'change_test_account_status'], ['text' => '‚ñ´Ô∏è–°–æ—Å—Ç–æ—è–Ω–∏–µ :', 'callback_data' => 'null']],
                    [['text' => ($test_account_setting['panel'] == 'none') ? 'üî¥ –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ' : 'üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ', 'callback_data' => 'change_test_account_panel'], ['text' => '‚ñ´Ô∏è–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ø–∞–Ω–µ–ª–∏ :', 'callback_data' => 'null']],
                    [['text' => $sql->query("SELECT * FROM `test_account`")->num_rows, 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ :', 'callback_data' => 'null']],
                    [['text' => $text . ' GB', 'callback_data' => 'change_test_account_volume'], ['text' => '‚ñ´Ô∏è–û–±—ä–µ–º :', 'callback_data' => 'null']],
                    [['text' => $test_account_setting['time'] . ' —á–∞—Å–æ–≤', 'callback_data' => 'change_test_account_time'], ['text' => '‚ñ´Ô∏è–í—Ä–µ–º—è :', 'callback_data' => 'null']],
                ]]);
                sendMessage($from_id, "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.\n\nüëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π.\n‚óΩÔ∏è@Proxygram", $manage_test_account);
            } else {
                sendMessage($from_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!", $back_account_test);
            }
        }
    }
    
    elseif ($data == 'change_test_account_time') {
        step('change_test_account_time');
        editMessage($from_id, "üÜï –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞:", $message_id, $back_account_test);
    }
    
    elseif ($user['step'] == 'change_test_account_time') {
        if (isset($text)) {
            if (is_numeric($text)) {
                step('none');
                $sql->query("UPDATE `test_account_setting` SET `time` = '$text'");
                $manage_test_account = json_encode(['inline_keyboard' => [
                    [['text' => ($status == 'active') ? 'üî¥' : 'üü¢', 'callback_data' => 'change_test_account_status'], ['text' => '‚ñ´Ô∏è–°–æ—Å—Ç–æ—è–Ω–∏–µ :', 'callback_data' => 'null']],
                    [['text' => ($test_account_setting['panel'] == 'none') ? 'üî¥ –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ' : 'üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ', 'callback_data' => 'change_test_account_panel'], ['text' => '‚ñ´Ô∏è–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ø–∞–Ω–µ–ª–∏ :', 'callback_data' => 'null']],
                    [['text' => $sql->query("SELECT * FROM `test_account`")->num_rows, 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ :', 'callback_data' => 'null']],
                    [['text' => $test_account_setting['volume'] . ' GB', 'callback_data' => 'change_test_account_volume'], ['text' => '‚ñ´Ô∏è–û–±—ä–µ–º :', 'callback_data' => 'null']],
                    [['text' => $text . ' —á–∞—Å–æ–≤', 'callback_data' => 'change_test_account_time'], ['text' => '‚ñ´Ô∏è–í—Ä–µ–º—è :', 'callback_data' => 'null']],
                ]]);
                sendMessage($from_id, "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.\n\nüëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π.\n‚óΩÔ∏è@Proxygram", $manage_test_account);
            } else {
                sendMessage($from_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!", $back_account_test);
            }
        }
    }
    
    elseif ($data == 'change_test_account_panel') {
        $panels = $sql->query("SELECT * FROM `panels`");
        if ($panels->num_rows > 0) {
            step('change_test_account_panel');
            while ($row = $panels->fetch_assoc()) {
                $key[] = [['text' => $row['name'], 'callback_data' => 'select_test_panel-'.$row['code']]];
            }
            $key[] = [['text' => 'üîô –ù–∞–∑–∞–¥', 'callback_data' => 'back_account_test']];
            $key = json_encode(['inline_keyboard' => $key]);
            editMessage($from_id, "üîß –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–∞–Ω–µ–ª–µ–π –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞:", $message_id, $key);
        } else {
            alert('‚ùå –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π –≤ –±–æ—Ç–µ!');
        }
    }
    
    elseif (strpos($data, 'select_test_panel-') !== false) {
        $code = explode('-', $data)[1];
        $panel = $sql->query("SELECT * FROM `panels` WHERE `code` = '$code'");
        if ($panel->num_rows > 0) {
            $sql->query("UPDATE `test_account_setting` SET `panel` = '$code'");
            $panel = $panel->fetch_assoc();
            $manage_test_account = json_encode(['inline_keyboard' => [
                [['text' => ($test_account_setting['status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_test_account_status'], ['text' => '‚ñ´Ô∏è–°–æ—Å—Ç–æ—è–Ω–∏–µ :', 'callback_data' => 'null']],
                [['text' => $panel['name'], 'callback_data' => 'change_test_account_panel'], ['text' => '‚ñ´Ô∏è–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ø–∞–Ω–µ–ª–∏ :', 'callback_data' => 'null']],
                [['text' => $sql->query("SELECT * FROM `test_account`")->num_rows, 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ :', 'callback_data' => 'null']],
                [['text' => $test_account_setting['volume'] . ' GB', 'callback_data' => 'change_test_account_volume'], ['text' => '‚ñ´Ô∏è–û–±—ä–µ–º :', 'callback_data' => 'null']],
                [['text' => $test_account_setting['time'] . ' —á–∞—Å–æ–≤', 'callback_data' => 'change_test_account_time'], ['text' => '‚ñ´Ô∏è–í—Ä–µ–º—è :', 'callback_data' => 'null']],
            ]]);
            editMessage($from_id, "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.\n\nüëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π.\n‚óΩÔ∏è@Proxygram", $message_id, $manage_test_account);
        } else {
            alert('‚ùå –ü–∞–Ω–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
        }
    }
    
    elseif  ($text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä') {
        step('add_server_select');
        sendMessage($from_id, "‚ÑπÔ∏è –ö–∞–∫—É—é –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –ø–∞–Ω–µ–ª–µ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å?", $select_panel);
    }

    # ------------- hedifay ------------- #
    elseif ($data == 'hedifay') {
        alert('‚ùå –ú—ã –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º —Ä–∞–∑–¥–µ–ª–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –±—É–¥—å—Ç–µ —Ç–µ—Ä–ø–µ–ª–∏–≤—ã!', true);
        exit();
        // step('add_server_hedifay');
        // deleteMessage($from_id, $message_id);
        // sendMessage($from_id, "‚Äåüëàüèª‚Å© –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –∏–º—è –ø–∞–Ω–µ–ª–∏: ‚Üì\n\n–ü—Ä–∏–º–µ—Ä –∏–º–µ–Ω–∏: üá≥üá± - –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã\n‚Ä¢ –≠—Ç–æ –∏–º—è –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.", $cancel_add_server);
    }

    elseif ($user['step'] == 'add_server_hedifay') {
        if ($sql->query("SELECT `name` FROM `panels` WHERE `name` = '$text'")->num_rows == 0) {
            step('send_address_hedifay');
            file_put_contents('add_panel.txt', "$text\n", FILE_APPEND);
            sendMessage($from_id, "üåê –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å –≤—Ö–æ–¥–∞ –≤ –ø–∞–Ω–µ–ª—å.\n\n- –ø—Ä–∏–º–µ—Ä:\n\n<code>https://1.1.1.1.sslip.io/8itQkDU30qCOwzUkK3LnMf58qfsw/175dbb13-95d7-3807-a987-gbs3434bd1b412/admin</code>", $cancel_add_server);
        } else {
            sendMessage($from_id, "‚ùå –ü–∞–Ω–µ–ª—å —Å –∏–º–µ–Ω–µ–º [ <b>$text</b> ] —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±–æ—Ç–µ!", $cancel_add_server);
        }
    }

    elseif ($user['step'] == 'send_address_hedifay') {
        if (strlen($text) > 50 and substr($text, -1) != '/') {
            if (checkUrl($text) == 200) {
                $info = explode("\n", file_get_contents('add_panel.txt'));
                preg_match('#https:\/\/.*?\/(.*)\/admin#', $text, $matches);
                $token = $matches[1];
                $code = rand(111111, 999999);
                $sql->query("INSERT INTO `hiddify_panels` (`name`, `login_link`, `token`, `code`, `status`, `type`) VALUES ('{$info[0]}', '$text', '$token', '$code', 'active', 'hiddify')");
                sendMessage($from_id, "‚úÖ –í–∞—à–∞ –ø–∞–Ω–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–æ—Ç!", $manage_server);
            }
        } else {
            sendMessage($from_id, "‚ùå –í–∞—à –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å –Ω–µ–≤–µ—Ä–µ–Ω!", $cancel_add_server);
        }
    }

    # ------------- sanayi ------------- #

    elseif ($data == 'sanayi') {
        step('add_server_sanayi');
        deleteMessage($from_id, $message_id);
        sendMessage($from_id, "‚Äåüëàüèª –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –∏–º—è –ø–∞–Ω–µ–ª–∏: ‚Üì\n\n–ü—Ä–∏–º–µ—Ä –∏–º–µ–Ω–∏: üá≥üá± - –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã\n‚Ä¢ –≠—Ç–æ –∏–º—è –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.", $cancel_add_server);
    }
    
    elseif ($user['step'] == 'add_server_sanayi') {
        if ($sql->query("SELECT `name` FROM `panels` WHERE `name` = '$text'")->num_rows == 0) {
            step('send_address_sanayi');
            file_put_contents('add_panel.txt', "$text\n", FILE_APPEND);
            sendMessage($from_id, "üåê –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ø–∞–Ω–µ–ª—å.\n\n- –ø—Ä–∏–º–µ—Ä:\n http://1.1.1.1:8000\n http://1.1.1.1:8000/vrshop\n http://domain.com:8000", $cancel_add_server);
        } else {
            sendMessage($from_id, "‚ùå –ü–∞–Ω–µ–ª—å —Å –∏–º–µ–Ω–µ–º [ <b>$text</b> ] —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±–æ—Ç–µ!", $cancel_add_server);
        }
    }
    
    elseif ($user['step'] == 'send_address_sanayi') {
        if (preg_match("/^(http|https):\/\/(\d+\.\d+\.\d+\.\d+|.*)\:.*$/", $text)) {
            if ($sql->query("SELECT `login_link` FROM `panels` WHERE `login_link` = '$text'")->num_rows == 0) {
                step('send_username_sanayi');
                file_put_contents('add_panel.txt', "$text\n", FILE_APPEND);
                sendMessage($from_id, "üîé - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ( <b>username</b> ) –¥–ª—è –≤–∞—à–µ–π –ø–∞–Ω–µ–ª–∏:", $cancel_add_server);
            } else {
            sendMessage($from_id, "‚ùå –ü–∞–Ω–µ–ª—å —Å –∞–¥—Ä–µ—Å–æ–º [ <b>$text</b> ] —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±–æ—Ç–µ!", $cancel_add_server);
        }
        } else {
            sendMessage($from_id, "üö´ –í–∞—à–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–µ–≤–µ—Ä–Ω–∞!", $cancel_add_server);
        }
    }
    
    elseif ($user['step'] == 'send_username_sanayi') {
        step('send_password_sanayi');
        file_put_contents('add_panel.txt', "$text\n", FILE_APPEND);
        sendMessage($from_id, "üîé - –ü–∞—Ä–æ–ª—å ( <b>password</b> ) –¥–ª—è –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", $cancel_add_server);
    }
    
    elseif ($user['step'] == 'send_password_sanayi') {
        step('none');
        $info = explode("\n", file_get_contents('add_panel.txt'));
        $response = loginPanelSanayi($info[1], $info[2], $text);
        if ($response['success']) {
            $code = rand(11111111, 99999999);
            $session = str_replace([" ", "\n", "\t"], ['', '', ''], explode('session	', file_get_contents('cookie.txt'))[1]);
            $sql->query("INSERT INTO `panels` (`name`, `login_link`, `username`, `password`, `token`, `code`, `status`, `type`) VALUES ('{$info[0]}', '{$info[1]}', '{$info[2]}', '$text', '$session', '$code', 'inactive', 'sanayi')");
            $sql->query("INSERT INTO `sanayi_panel_setting` (`code`, `inbound_id`, `example_link`, `flow`) VALUES ('$code', 'none', 'none', 'offflow')");
            sendMessage($from_id, "‚úÖ –†–æ–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤–æ—à–µ–ª –≤ –≤–∞—à—É –ø–∞–Ω–µ–ª—å!\n\n‚ñ´Ô∏è–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è : <code>{$info[2]}</code>\n‚ñ´Ô∏è–ü–∞—Ä–æ–ª—å : <code>{$text}</code>\n‚ñ´Ô∏è–ö–æ–¥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è : <code>$code</code>", $manage_server);
        } else {
            sendMessage($from_id, "‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø–∞–Ω–µ–ª—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç!\n\nüéØ –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –Ω–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ä–æ–±–æ—Ç–∞ –∫ –≤–∞—à–µ–π –ø–∞–Ω–µ–ª–∏:‚Üì\n\n‚óΩ –ó–∞–∫—Ä—ã—Ç—ã–π –ø–æ—Ä—Ç\n‚óΩ –ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å\n‚óΩ –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å\n‚óΩ –ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å\n‚óΩ IP-–∞–¥—Ä–µ—Å –≤ –±–ª–æ–∫-–ª–∏—Å—Ç–µ\n‚óΩÔ∏è –ó–∞–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø CURL\n‚óΩÔ∏è –ü—Ä–æ–±–ª–µ–º—ã —Å —Ö–æ—Å—Ç–æ–º", $manage_server);
        }
        foreach (['add_panel.txt', 'cookie.txt'] as $file) if (file_exists($file)) unlink($file);
    }
    
    # ------------- marzban ------------- #
    
    elseif ($data == 'marzban') {
        step('add_server');
        deleteMessage($from_id, $message_id);
        sendMessage($from_id, "‚Äåüëàüèª –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –∏–º—è –ø–∞–Ω–µ–ª–∏: ‚Üì\n\n–ü—Ä–∏–º–µ—Ä –∏–º–µ–Ω–∏: üá≥üá± - –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã\n‚Ä¢ –≠—Ç–æ –∏–º—è –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.", $cancel_add_server);
    }
    
    elseif ($user['step'] == 'add_server') {
        if ($sql->query("SELECT `name` FROM `panels` WHERE `name` = '$text'")->num_rows == 0) {
            step('send_address');
            file_put_contents('add_panel.txt', "$text\n", FILE_APPEND);
            sendMessage($from_id, "üåê –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ø–∞–Ω–µ–ª—å.\n\n- –ø—Ä–∏–º–µ—Ä: http://1.1.1.1:8000", $cancel_add_server);
        } else {
            sendMessage($from_id, "‚ùå –ü–∞–Ω–µ–ª—å —Å –∏–º–µ–Ω–µ–º [ <b>$text</b> ] —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±–æ—Ç–µ!", $cancel_add_server);
        }
    }
    
    elseif ($user['step'] == 'send_address') {
        if (preg_match("/^(http|https):\/\/(\d+\.\d+\.\d+\.\d+|.*)\:\d+$/", $text)) {
            if ($sql->query("SELECT `login_link` FROM `panels` WHERE `login_link` = '$text'")->num_rows == 0) {
                step('send_username');
                file_put_contents('add_panel.txt', "$text\n", FILE_APPEND);
                sendMessage($from_id, "üîé - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ( <b>username</b> ) –¥–ª—è –≤–∞—à–µ–π –ø–∞–Ω–µ–ª–∏:", $cancel_add_server);
            } else {
            sendMessage($from_id, "‚ùå –ü–∞–Ω–µ–ª—å —Å –∞–¥—Ä–µ—Å–æ–º [ <b>$text</b> ] —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±–æ—Ç–µ!", $cancel_add_server);
        }
        } else {
            sendMessage($from_id, "üö´ –í–∞—à –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å –Ω–µ–≤–µ—Ä–µ–Ω!", $cancel_add_server);
        }
    }
    
    elseif ($user['step'] == 'send_username') {
        step('send_password');
        file_put_contents('add_panel.txt', "$text\n", FILE_APPEND);
        sendMessage($from_id, "üîé - –ü–∞—Ä–æ–ª—å ( <b>password</b> ) –¥–ª—è –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞:", $cancel_add_server);
    }
    
    elseif ($user['step'] == 'send_password') {
        step('none');
        $info = explode("\n", file_get_contents('add_panel.txt'));
        $response = loginPanel($info[1], $info[2], $text);
        if (isset($response['access_token'])) {
            $code = rand(11111111, 99999999);
            $sql->query("INSERT INTO `panels` (`name`, `login_link`, `username`, `password`, `token`, `code`, `type`) VALUES ('{$info[0]}', '{$info[1]}', '{$info[2]}', '$text', '{$response['access_token']}', '$code', 'marzban')");
            sendMessage($from_id, "‚úÖ –†–æ–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤–æ—à–µ–ª –≤ –≤–∞—à—É –ø–∞–Ω–µ–ª—å!\n\n‚ñ´Ô∏è–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è : <code>{$info[2]}</code>\n‚ñ´Ô∏è–ü–∞—Ä–æ–ª—å : <code>{$text}</code>\n‚ñ´Ô∏è–ö–æ–¥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è : <code>$code</code>", $manage_server);
        } else {
            sendMessage($from_id, "‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø–∞–Ω–µ–ª—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç!\n\nüéØ –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –Ω–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ä–æ–±–æ—Ç–∞ –∫ –≤–∞—à–µ–π –ø–∞–Ω–µ–ª–∏:‚Üì\n\n‚óΩ –ó–∞–∫—Ä—ã—Ç—ã–π –ø–æ—Ä—Ç\n‚óΩ –ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å\n‚óΩ –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å\n‚óΩ –ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å\n‚óΩ IP-–∞–¥—Ä–µ—Å –≤ –±–ª–æ–∫-–ª–∏—Å—Ç–µ\n‚óΩÔ∏è –ó–∞–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø CURL\n‚óΩÔ∏è –ü—Ä–æ–±–ª–µ–º—ã —Å —Ö–æ—Å—Ç–æ–º", $manage_server);
        }
        if (file_exists('add_panel.txt')) unlink('add_panel.txt');
    }
    
    # ------------------------------------ #
    
    elseif ($text == 'üéü –î–æ–±–∞–≤–∏—Ç—å –ø–ª–∞–Ω') {
        step('none');
        sendMessage($from_id, "‚ÑπÔ∏è –ö–∞–∫–æ–π —Ç–∏–ø –ø–ª–∞–Ω–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å?\n\nüëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:", $add_plan_button);
    }

    elseif ($data == 'add_buy_plan') { 
        step('add_name');
        deleteMessage($from_id, $message_id);
        sendMessage($from_id, "üëáüèª–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:‚Üì", $back_panel);
    }
    
    elseif ($user['step'] == 'add_name' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        step('add_limit');
        file_put_contents('add_plan.txt', "$text\n", FILE_APPEND);
        sendMessage($from_id, "üëáüèª–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –æ–±—ä–µ–º –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:‚Üì\n\n‚óΩ–ü—Ä–∏–º–µ—Ä: <code>50</code>", $back_panel);
    }
    
    elseif ($user['step'] == 'add_limit' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        step('add_date');
        file_put_contents('add_plan.txt', "$text\n", FILE_APPEND);
        sendMessage($from_id, "üëáüèª–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –¥–∞—Ç—É –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:‚Üì\n\n‚óΩ–ü—Ä–∏–º–µ—Ä: <code>30</code>", $back_panel);
    }
    
    elseif ($user['step'] == 'add_date' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        step('add_price');
        file_put_contents('add_plan.txt', "$text\n", FILE_APPEND);
        sendMessage($from_id, "üí∏–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—É–º–º—É —ç—Ç–æ–≥–æ –æ–±—ä–µ–º–∞ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:‚Üì\n\n‚óΩ–ü—Ä–∏–º–µ—Ä: <code>60000</code>", $back_panel);
    }
    
    elseif ($user['step'] == 'add_price' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        step('none');
        $info = explode("\n", file_get_contents('add_plan.txt'));
        $code = rand(1111111, 9999999);
        $sql->query("INSERT INTO `category` (`limit`, `date`, `name`, `price`, `code`, `status`) VALUES ('{$info[1]}', '{$info[2]}', '{$info[0]}', '$text', '$code', 'active')");
        sendmessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫.\n\n‚óΩ–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ–±—ä–µ–º : <code>{$info[1]}</code>\n‚óΩ–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞ : <code>$text</code>", $manage_server);
        if (file_exists('add_plan.txt')) unlink('add_plan.txt');
    }

    elseif ($data == 'add_limit_plan') { 
        step('add_name_limit');
        deleteMessage($from_id, $message_id);
        sendMessage($from_id, "üëáüèª–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:‚Üì", $back_panel);
    }
    
    elseif ($user['step'] == 'add_name_limit' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        step('add_limit_limit');
        file_put_contents('add_plan_limit.txt', "$text\n", FILE_APPEND);
        sendMessage($from_id, "üëáüèª–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –æ–±—ä–µ–º –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:‚Üì\n\n‚óΩ–ü—Ä–∏–º–µ—Ä: <code>50</code>", $back_panel);
    }
    
    elseif ($user['step'] == 'add_limit_limit' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        step('add_price_limit');
        file_put_contents('add_plan_limit.txt', "$text\n", FILE_APPEND);
        sendMessage($from_id, "üí∏–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—É–º–º—É —ç—Ç–æ–≥–æ –æ–±—ä–µ–º–∞ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:‚Üì\n\n‚óΩ–ü—Ä–∏–º–µ—Ä: <code>60000</code>", $back_panel);
    }
    
    elseif ($user['step'] == 'add_price_limit' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        step('none');
        $info = explode("\n", file_get_contents('add_plan_limit.txt'));
        $code = rand(1111111, 9999999);
        $sql->query("INSERT INTO `category_limit` (`limit`, `name`, `price`, `code`, `status`) VALUES ('{$info[1]}', '{$info[0]}', '$text', '$code', 'active')");
        sendmessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫.\n\n‚óΩ–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ–±—ä–µ–º : <code>{$info[1]}</code>\n‚óΩ–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞ : <code>$text</code>", $manage_server);
        if (file_exists('add_plan_limit.txt')) unlink('add_plan_limit.txt');
    }

    elseif ($data == 'add_date_plan') { 
        step('add_name_date');
        deleteMessage($from_id, $message_id);
        sendMessage($from_id, "üëáüèª–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:‚Üì", $back_panel);
    }
    
    elseif ($user['step'] == 'add_name_date' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        step('add_date_date');
        file_put_contents('add_plan_date.txt', "$text\n", FILE_APPEND);
        sendMessage($from_id, "üëáüèª–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –¥–∞—Ç—É –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:‚Üì\n\n‚óΩ–ü—Ä–∏–º–µ—Ä: <code>30</code>", $back_panel);
    }
    
    elseif ($user['step'] == 'add_date_date' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        step('add_price_date');
        file_put_contents('add_plan_date.txt', "$text\n", FILE_APPEND);
        sendMessage($from_id, "üí∏–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—É–º–º—É —ç—Ç–æ–≥–æ –æ–±—ä–µ–º–∞ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:‚Üì\n\n‚óΩ–ü—Ä–∏–º–µ—Ä: <code>60000</code>", $back_panel);
    }
    
    elseif ($user['step'] == 'add_price_date' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        step('none');
        $info = explode("\n", file_get_contents('add_plan_date.txt'));
        $code = rand(1111111, 9999999);
        $sql->query("INSERT INTO `category_date` (`date`, `name`, `price`, `code`, `status`) VALUES ('{$info[1]}', '{$info[0]}', '$text', '$code', 'active')");
        sendmessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫.\n\n‚óΩ–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ–±—ä–µ–º : <code>{$info[1]}</code>\n‚óΩ–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞ : <code>$text</code>", $manage_server);
        if (file_exists('add_plan_date.txt')) unlink('add_plan_date.txt');
    }
    
    elseif ($text == '‚öôÔ∏è –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤' or $data == 'back_panellist') {
        step('none');
        $info_servers = $sql->query("SELECT * FROM `panels`");
        if($info_servers->num_rows == 0){
            if(!isset($data)){
                sendMessage($from_id, "‚ùå –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ –±–æ—Ç–µ.");
            }else{
                editMessage($from_id, "‚ùå –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ –±–æ—Ç–µ.", $message_id);
            }
            exit();
        }
        $key[] = [['text' => '‚ñ´Ô∏è–°—Ç–∞—Ç—É—Å', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ò–º—è', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–¥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è', 'callback_data' => 'null']];
        while($row = $info_servers->fetch_array()){
            $name = $row['name'];
            $code = $row['code'];
            if($row['status'] == 'active') $status = '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω'; else $status = '‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω';
            $key[] = [['text' => $status, 'callback_data' => 'change_status_panel-'.$code], ['text' => $name, 'callback_data' => 'status_panel-'.$code], ['text' => $code, 'callback_data' => 'status_panel-'.$code]];
        }
        $key[] = [['text' => '‚ùå –ó–∞–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å | close panel', 'callback_data' => 'close_panel']];
        $key = json_encode(['inline_keyboard' => $key]);
        if(!isset($data)){
            sendMessage($from_id, "üîé –°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤:\n\n‚öôÔ∏è –í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–∂–¥—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º, –Ω–∞–∂–∞–≤ –Ω–∞ –µ–≥–æ –∫–æ–¥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.\n\n‚ÑπÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞–∂–¥—ã–π –∫–æ–¥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º.", $key);
        }else{
            editMessage($from_id, "üîé –°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤:\n\n‚öôÔ∏è –í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–∂–¥—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º, –Ω–∞–∂–∞–≤ –Ω–∞ –µ–≥–æ –∫–æ–¥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.\n\n‚ÑπÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞–∂–¥—ã–π –∫–æ–¥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º.", $message_id, $key);
        }
    }
    
    elseif (strpos($data, 'change_status_panel-') !== false) {
        $code = explode('-', $data)[1];
        $info_panel = $sql->query("SELECT * FROM `panels` WHERE `code` = '$code'")->fetch_assoc();
        if ($info_panel['type'] == 'sanayi') {
            $sanayi_setting = $sql->query("SELECT * FROM `sanayi_panel_setting` WHERE `code` = '{$info_panel['code']}'")->fetch_assoc();
            if ($sanayi_setting['example_link'] == 'none') {
                alert('üî¥ –ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –ø–∞–Ω–µ–ª—å Sanayi, —Å–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ –ø—Ä–∏–º–µ—Ä —Å–µ—Ä–≤–∏—Å–∞!');
                exit;
            } elseif ($sanayi_setting['inbound_id'] == 'none') {
                alert('üî¥ –ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –ø–∞–Ω–µ–ª—å Sanayi, —Å–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ –ø—Ä–∏–º–µ—Ä —Å–µ—Ä–≤–∏—Å–∞!');
                exit;
            }
        }
        $status = $info_panel['status'];
        if ($status == 'active') {
            $sql->query("UPDATE `panels` SET `status` = 'inactive' WHERE `code` = '$code'");
        } else {
            $sql->query("UPDATE `panels` SET `status` = 'active' WHERE `code` = '$code'");
        }
        $key[] = [['text' => '‚ñ´Ô∏è–°—Ç–∞—Ç—É—Å', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ò–º—è', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–¥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è', 'callback_data' => 'null']];
        $result = $sql->query("SELECT * FROM `panels`");
        while ($row = $result->fetch_array()) {
            $name = $row['name'];
            $code = $row['code'];
            if ($row['status'] == 'active') $status = '‚úÖ –ê–∫—Ç–∏–≤–Ω–æ'; else $status = '‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–æ';
            $key[] = [['text' => $status, 'callback_data' => 'change_status_panel-' . $code], ['text' => $name, 'callback_data' => 'status_panel-' . $code], ['text' => $code, 'callback_data' => 'status_panel-' . $code]];
        }
        $key[] = [['text' => '‚ùå –ó–∞–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å | –∑–∞–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å', 'callback_data' => 'close_panel']];
        $key = json_encode(['inline_keyboard' => $key]);
        editMessage($from_id, "üîé –°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤:\n\n‚ÑπÔ∏è –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–º —â–µ–ª–∫–Ω–∏—Ç–µ –ø–æ –Ω–µ–º—É.", $message_id, $key);
    }
    
    elseif (strpos($data, 'status_panel-') !== false or strpos($data, 'update_panel-') !== false) {
        alert('üîÑ - –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥, –ø–æ–∫–∞ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...', false);
    
        $code = explode('-', $data)[1];
        $info_server = $sql->query("SELECT * FROM `panels` WHERE `code` = '$code'")->fetch_assoc();
    
        if ($info_server['status'] == 'active') $status = '‚úÖ –ê–∫—Ç–∏–≤–Ω–æ'; else $status = '‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–æ';
        if (strpos($info_server['login_link'], 'https://') !== false) $status_ssl = '‚úÖ –ê–∫—Ç–∏–≤–Ω–æ'; else $status_ssl = '‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–æ';
    
        $info = [
            'ip' => explode(':', str_replace(['http://', 'https://'], '', $info_server['login_link']))[0] ?? '‚ö†Ô∏è',
            'port' => explode(':', str_replace(['http://', 'https://'], '', $info_server['login_link']))[1] ?? '‚ö†Ô∏è',
            'type' => ($info_server['type'] == 'marzban') ? 'Marzban' : 'Sanayi',
        ];
    
        $txt = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–Ω–µ–ª–∏ [ <b>{$info_server['name']}</b> ] —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞.\n\nüîé –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –≤ —Ä–æ–±–æ—Ç–µ: <b>$status</b>\n‚ÑπÔ∏è –ö–æ–¥ —Å–µ—Ä–≤–µ—Ä–∞ (–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏): <code>$code</code>\n\n‚óΩÔ∏è–¢–∏–ø –ø–∞–Ω–µ–ª–∏: <b>{$info['type']}</b>\n‚óΩÔ∏è–õ–æ–∫–∞—Ü–∏—è: <b>{$info_server['name']}</b>\n‚óΩÔ∏èIP: <code>{$info['ip']}</code>\n‚óΩÔ∏è–ü–æ—Ä—Ç: <code>{$info['port']}</code>\n‚óΩÔ∏è–°—Ç–∞—Ç—É—Å SSL: <b>$status_ssl</b>\n\nüîë –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–∞–Ω–µ–ª–∏: <code>{$info_server['username']}</code>\nüîë –ü–∞—Ä–æ–ª—å –ø–∞–Ω–µ–ª–∏: <code>{$info_server['password']}</code>";
    
        $protocols = explode('|', $info_server['protocols']);
        unset($protocols[count($protocols) - 1]);
        if (in_array('vmess', $protocols)) $vmess_status = '‚úÖ'; else $vmess_status = '‚ùå';
        if (in_array('trojan', $protocols)) $trojan_status = '‚úÖ'; else $trojan_status = '‚ùå';
        if (in_array('vless', $protocols)) $vless_status = '‚úÖ'; else $vless_status = '‚ùå';
        if (in_array('shadowsocks', $protocols)) $shadowsocks_status = '‚úÖ'; else $shadowsocks_status = '‚ùå';
    
        if ($info_server['type'] == 'marzban') {
            $back_panellist = json_encode(['inline_keyboard' => [
                [['text' => 'üÜô –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', 'callback_data' => 'update_panel-' . $code]],
                [['text' => 'üîé - –°—Ç–∞—Ç—É—Å :', 'callback_data' => 'null'], ['text' => $info_server['status'] == 'active' ? '‚úÖ' : '‚ùå', 'callback_data' => 'change_status_panel-' . $code]],
                [['text' => 'üéØ - Flow :', 'callback_data' => 'null'], ['text' => $info_server['flow'] == 'flowon' ? '‚úÖ' : '‚ùå', 'callback_data' => 'change_status_flow-' . $code]],
                [['text' => 'üóë –£–¥–∞–ª–∏—Ç—å –ø–∞–Ω–µ–ª—å', 'callback_data' => 'delete_panel-' . $code], ['text' => '‚úçÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è', 'callback_data' => 'change_name_panel-' . $code]],
                [['text' => 'vmess - [' . $vmess_status . ']', 'callback_data' => 'change_protocol|vmess-' . $code], ['text' => 'trojan [' . $trojan_status . ']', 'callback_data' => 'change_protocol|trojan-' . $code], ['text' => 'vless [' . $vless_status . ']', 'callback_data' => 'change_protocol|vless-' . $code]],
                [['text' => 'shadowsocks [' . $shadowsocks_status . ']', 'callback_data' => 'change_protocol|shadowsocks-' . $code]],
                [['text' => '‚ÑπÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥—è—â–∏–º —Ç—Ä–∞—Ñ–∏–∫–æ–º', 'callback_data' => 'manage_marzban_inbound-' . $code], ['text' => '‚è∫ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–∞—Ñ–∏–∫', 'callback_data' => 'set_inbound_marzban-' . $code]],
                [['text' => 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –ø–∞–Ω–µ–ª–µ–π', 'callback_data' => 'back_panellist']],
            ]]);
        } elseif ($info_server['type'] == 'sanayi') {
            $back_panellist = json_encode(['inline_keyboard' => [
                [['text' => 'üÜô –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', 'callback_data' => 'update_panel-' . $code]],
                [['text' => 'üîé - –°—Ç–∞—Ç—É—Å :', 'callback_data' => 'null'], ['text' => $info_server['status'] == 'active' ? '‚úÖ' : '‚ùå', 'callback_data' => 'change_status_panel-' . $code]],
                [['text' => 'üóë –£–¥–∞–ª–∏—Ç—å –ø–∞–Ω–µ–ª—å', 'callback_data' => 'delete_panel-' . $code], ['text' => '‚úçÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è', 'callback_data' => 'change_name_panel-' . $code]],
                [['text' => 'üÜî –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–∞—Ñ–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª—É–∂–±—ã', 'callback_data' => 'set_inbound_sanayi-' . $code]],
                [['text' => 'üåê –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∏–º–µ—Ä —Å—Å—ã–ª–∫–∏ (—Å–ª—É–∂–±–∞) –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏', 'callback_data' => 'set_example_link_sanayi-' . $code]],
                [['text' => 'vmess - [' . $vmess_status . ']', 'callback_data' => 'change_protocol|vmess-' . $code], ['text' => 'trojan [' . $trojan_status . ']', 'callback_data' => 'change_protocol|trojan-' . $code], ['text' => 'vless [' . $vless_status . ']', 'callback_data' => 'change_protocol|vless-' . $code]],
                [['text' => 'shadowsocks [' . $shadowsocks_status . ']', 'callback_data' => 'change_protocol|shadowsocks-' . $code]],
                [['text' => 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –ø–∞–Ω–µ–ª–µ–π', 'callback_data' => 'back_panellist']],
            ]]);
        }
        editMessage($from_id, $txt, $message_id, $back_panellist);
    }
    elseif (strpos($data, 'set_inbound_marzban') !== false) {
        $code = explode('-', $data)[1];
        step('send_inbound_marzban-' . $code);
        sendMessage($from_id, "üÜï –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∏—Å—Ö–æ–¥—è—â–µ–≥–æ (Inbound):\n\n‚ùå –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –µ—Å–ª–∏ –≤—ã –≤–≤–µ–¥–µ—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ–≤–µ—Ä–Ω–æ, —ç—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞, –∏ —Ç–∞–∫–∂–µ –≤–∞—à –∏—Å—Ö–æ–¥—è—â–∏–π (Inbound), –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞–º–∏, –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª—É, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –¥–ª—è —ç—Ç–æ–π –ø–∞–Ω–µ–ª–∏ –≤ —Ä–æ–±–æ—Ç–µ.", $back_panel);
    }
    
    elseif (strpos($user['step'], 'send_inbound_marzban') !== false and $text != '‚úî –ó–∞–≤–µ—Ä—à–∏—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å') {
        $code = explode('-', $user['step'])[1];
        $rand_code = rand(111111, 999999);
        $panel_fetch = $sql->query("SELECT * FROM `panels` WHERE `code` = '$code'")->fetch_assoc();
        $token = loginPanel($panel_fetch['login_link'], $panel_fetch['username'], $panel_fetch['password'])['access_token'];
        $inbounds = inbounds($token, $panel_fetch['login_link']);
        $status = checkInbound(json_encode($inbounds), $text);
        if ($status) {
            $res = $sql->query("INSERT INTO `marzban_inbounds` (`panel`, `inbound`, `code`, `status`) VALUES ('$code', '$text', '$rand_code', 'active')");
            sendMessage($from_id, "‚úÖ –í–∞—à –∏—Å—Ö–æ–¥—è—â–∏–π (Inbound) —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.\n\n#Ô∏è‚É£ –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –Ω–æ–≤—ã–π –∏—Å—Ö–æ–¥—è—â–∏–π (Inbound), –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ, –∏–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /end_inbound –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.", $end_inbound);
        } else {
            sendMessage($from_id, "üî¥ –í–∞—à –∏—Å—Ö–æ–¥—è—â–∏–π (Inbound) –Ω–µ –Ω–∞–π–¥–µ–Ω!", $end_inbound);
        }
    }
    
    elseif (($text == '‚úî –ó–∞–≤–µ—Ä—à–∏—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å' or $text == '/end_inbound') and strpos($user['step'], 'send_inbound_marzban') !== false) {
        step('none');
        sendMessage($from_id, "‚úÖ –í—Å–µ –≤–∞—à–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏—Å—Ö–æ–¥—è—â–∏–µ (Inbound) —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", $manage_server);
    }
    
    elseif (strpos($data, 'manage_marzban_inbound') !== false) {
        $panel_code = explode('-', $data)[1];
        $fetch_inbounds = $sql->query("SELECT * FROM `marzban_inbounds` WHERE `panel` = '$panel_code'");
        if ($fetch_inbounds->num_rows > 0) {
            while ($row = $fetch_inbounds->fetch_assoc()) {
                $key[] = [['text' => $row['inbound'], 'callback_data' => 'null'], ['text' => 'üóë', 'callback_data' => 'delete_marzban_inbound-' . $row['code'] . '-' . $panel_code]];
            }
            $key[] = [['text' => 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è', 'callback_data' => 'status_panel-' . $panel_code]];
            $key = json_encode(['inline_keyboard' => $key]);
            editMessage($from_id, "üîé –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∏—Å—Ö–æ–¥—è—â–∏—Ö (Inbound) –¥–ª—è —ç—Ç–æ–π –ø–∞–Ω–µ–ª–∏:\n\n", $message_id, $key);
        } else {
            alert('‚ùå –ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∏—Å—Ö–æ–¥—è—â–∏—Ö (Inbound) –¥–ª—è —ç—Ç–æ–π –ø–∞–Ω–µ–ª–∏!', true);
        }
    }
    
    elseif (strpos($data, 'delete_marzban_inbound') !== false) {
        $panel_code = explode('-', $data)[2];
        $inbound_code = explode('-', $data)[1];
        $fetch = $sql->query("SELECT * FROM `marzban_inbounds` WHERE `panel` = '$panel_code'");
        if ($fetch->num_rows > 0) {
            alert('‚úÖ –í–∞—à –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏—Å—Ö–æ–¥—è—â–∏–π (Inbound) —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ä–æ–±–æ—Ç–∞.', true);
            $sql->query("DELETE FROM `marzban_inbounds` WHERE `panel` = '$panel_code' AND `code` = '$inbound_code'");
            $key = json_encode(['inline_keyboard' => [[['text' => 'üîé', 'callback_data' => 'manage_marzban_inbound-' . $panel_code]]]]);
            editMessage($from_id, "‚¨ÖÔ∏è –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –∏—Å—Ö–æ–¥—è—â–∏—Ö (Inbound) –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.", $message_id, $key);
        } else {
            alert('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–π –∏—Å—Ö–æ–¥—è—â–∏–π (Inbound) –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–æ–±–æ—Ç–∞!', true);
        }
    }
    
    elseif (strpos($data, 'set_inbound_sanayi') !== false) {
        $code = explode('-', $data)[1];
        step('send_inbound_id-' . $code);
        sendMessage($from_id, "üëá –û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–æ–π —Å–ª—É–∂–±—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫–ª–∏–µ–Ω—Ç—ã (ID):", $back_panel);
    }
    
    elseif (strpos($user['step'], 'send_inbound_id') !== false) {
        if (is_numeric($text)) {
            $code = explode('-', $user['step'])[1];
            $info_panel = $sql->query("SELECT * FROM `panels` WHERE `code` = '$code'")->fetch_assoc();
            include_once 'api/sanayi.php';
            $xui = new Sanayi($info_panel['login_link'], $info_panel['token']);
            $id_status = json_decode($xui->checkId($text), true)['status'];
            if ($id_status == true) {
                step('none');
                if ($sql->query("SELECT * FROM `sanayi_panel_setting` WHERE `code` = '$code'")->num_rows > 0) {
                    $sql->query("UPDATE `sanayi_panel_setting` SET `inbound_id` = '$text' WHERE `code` = '$code'");
                } else {
                    $sql->query("INSERT INTO `sanayi_panel_setting` (`code`, `inbound_id`, `example_link`, `flow`) VALUES ('$code', '$text', 'none', 'offflow')");
                }
                sendMessage($from_id, "‚úÖ –£—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!", $manage_server);
            } else {
                sendMessage($from_id, "‚ùå –ò—Å—Ö–æ–¥—è—â–∏–π (Inbound) —Å ID <code>$text</code> –Ω–µ –Ω–∞–π–¥–µ–Ω!", $back_panel);
            }
        } else {
            sendMessage($from_id, "‚ùå –í—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–º!", $back_panel);
        }
    }
    elseif (strpos($data, 'set_example_link_sanayi') !== false) {
        $code = explode('-', $data)[1];
        step('set_example_link_sanayi-' . $code);
        sendMessage($from_id, "‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –æ–±—Ä–∞–∑–µ—Ü —É—Å–ª—É–≥–∏, —É—á–∏—Ç—ã–≤–∞—è —Å–ª–µ–¥—É—é—â–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:\n\n‚ñ´Ô∏è–ó–∞–º–µ–Ω–∏—Ç–µ –∫–∞–∂–¥—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ –∑–Ω–∞—á–µ–Ω–∏–µ–º s1 –∏ %s2 –∏ —Ç. –¥.\n\n–ù–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—É—á–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n\n<code>vless://a8eff4a8-226d3343bbf-9e9d-a35f362c4cb4@1.1.1.1:2053?security=reality&type=grpc&host=&headerType=&serviceName=xyz&sni=cdn.discordapp.com&fp=chrome&pbk=SbVKOEMjK0sIlbwg4akyBg5mL5KZwwB-ed4eEE7YnRc&sid=&spx=#Proxygram</code>\n\n–ò –≤–∞—à–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –≤ —Ä–æ–±–æ—Ç–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–µ–π (–ø—Ä–∏–º–µ—Ä–Ω–æ):\n\n<code>vless://%s1@%s2?security=reality&type=grpc&host=&headerType=&serviceName=xyz&sni=cdn.discordapp.com&fp=chrome&pbk=SbVKOEMjK0sIlbwg4akyBg5mL5KZwwB-ed4eEE7YnRc&sid=&spx=#%s3</code>\n\n‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏–Ω–∞—á–µ —Ä–æ–±–æ—Ç —Å—Ç–æ–ª–∫–Ω–µ—Ç—Å—è —Å –æ—à–∏–±–∫–æ–π –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —É—Å–ª—É–≥–∏.", $back_panel);
    }
    
    elseif (strpos($user['step'], 'set_example_link_sanayi') !== false) {
        if (strpos($text, '%s1') !== false and strpos($text, '%s3') !== false) {
            step('none');
            $code = explode('-', $user['step'])[1];
            if ($sql->query("SELECT * FROM `sanayi_panel_setting` WHERE `code` = '$code'")->num_rows > 0) {
                $sql->query("UPDATE `sanayi_panel_setting` SET `example_link` = '$text' WHERE `code` = '$code'");
            } else {
                $sql->query("INSERT INTO `sanayi_panel_setting` (`code`, `inbound_id`, `example_link`, `flow`) VALUES ('$code', 'none', '$text', 'offflow')");
            }
            sendMessage($from_id, "‚úÖ –£—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!", $manage_server);
        } else {
            sendMessage($from_id, "‚ùå –í–∞—à –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ–±—Ä–∞–∑–µ—Ü —Å—Å—ã–ª–∫–∏ –Ω–µ–≤–µ—Ä–µ–Ω!", $back_panel);
        }
    }
    
    elseif (strpos($data, 'change_status_flow-') !== false) {
        $code = explode('-', $data)[1];
        $info_panel = $sql->query("SELECT * FROM `panels` WHERE `code` = '$code'");
        $status = $info_panel->fetch_assoc()['flow'];
        if ($status == 'flowon') {
            $sql->query("UPDATE `panels` SET `flow` = 'flowoff' WHERE `code` = '$code'");
        } else {
            $sql->query("UPDATE `panels` SET `flow` = 'flowon' WHERE `code` = '$code'");
        }
        $back = json_encode(['inline_keyboard' => [[['text' => 'üÜô –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', 'callback_data' => 'update_panel-' . $code]]]]);
        editmessage($from_id, '‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω—ã.', $message_id, $back);
    }
    
    elseif (strpos($data, 'change_protocol|') !== false) {
        $code = explode('-', $data)[1];
        $protocol = explode('-', explode('|', $data)[1])[0];
        $panel = $sql->query("SELECT * FROM `panels` WHERE `code` = '$code' LIMIT 1")->fetch_assoc();
        $protocols = explode('|', $panel['protocols']);
        unset($protocols[count($protocols) - 1]);
    
        if ($protocol == 'vless') {
            if (in_array($protocol, $protocols)) {
                unset($protocols[array_search($protocol, $protocols)]);
            } else {
                array_push($protocols, $protocol);
            }
        } elseif ($protocol == 'vmess') {
            if (in_array($protocol, $protocols)) {
                unset($protocols[array_search($protocol, $protocols)]);
            } else {
                array_push($protocols, $protocol);
            }
        } elseif ($protocol == 'trojan') {
            if (in_array($protocol, $protocols)) {
                unset($protocols[array_search($protocol, $protocols)]);
            } else {
                array_push($protocols, $protocol);
            }
        } elseif ($protocol == 'shadowsocks') {
            if (in_array($protocol, $protocols)) {
                unset($protocols[array_search($protocol, $protocols)]);
            } else {
                array_push($protocols, $protocol);
            }
        }
    
        $protocols = join('|', $protocols) . '|';
        $sql->query("UPDATE `panels` SET `protocols` = '$protocols' WHERE `code` = '$code' LIMIT 1");
    
        $back = json_encode(['inline_keyboard' => [[['text' => 'üÜô –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', 'callback_data' => 'update_panel-' . $code]]]]);
        editmessage($from_id, '‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ.', $message_id, $back);
    }
    
    elseif (strpos($data, 'change_name_panel-') !== false) {
        $code = explode('-', $data)[1];
        step('change_name-' . $code);
        sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –ø–∞–Ω–µ–ª–∏:", $back_panel);
    }
    
    elseif (strpos($user['step'], 'change_name-') !== false) {
        $code = explode('-', $user['step'])[1];
        step('none');
        $sql->query("UPDATE `panels` SET `name` = '$text' WHERE `code` = '$code'");
        sendMessage($from_id, "‚úÖ –ò–º—è –ø–∞–Ω–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ [ <b>$text</b> ].", $back_panellist);
    }
    
    elseif (strpos($data, 'delete_panel-') !== false) {
        step('none');
        $code = explode('-', $data)[1];
        $sql->query("DELETE FROM `panels` WHERE `code` = '$code'");
        $info_servers = $sql->query("SELECT * FROM `panels`");
        if ($info_servers->num_rows == 0) {
            if (!isset($data)) {
                sendMessage($from_id, "‚ùå –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤.");
            } else {
                editMessage($from_id, "‚ùå –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤.", $message_id);
            }
            exit();
        }
        $key[] = [['text' => '‚ñ´Ô∏è–°—Ç–∞—Ç—É—Å', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ò–º—è', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–¥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è', 'callback_data' => 'null']];
        while ($row = $info_servers->fetch_array()) {
            $name = $row['name'];
            $code = $row['code'];
            if ($row['status'] == 'active') $status = '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω'; else $status = '‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω';
            $key[] = [['text' => $status, 'callback_data' => 'change_status_panel-' . $code], ['text' => $name, 'callback_data' => 'status_panel-' . $code], ['text' => $code, 'callback_data' => 'status_panel-' . $code]];
        }
        $key[] = [['text' => '‚ùå –ó–∞–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å | –∑–∞–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å', 'callback_data' => 'close_panel']];
        $key = json_encode(['inline_keyboard' => $key]);
        if (!isset($data)) {
            sendMessage($from_id, "üîé –°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤:\n\n‚öôÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–¥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º.\n\n‚ÑπÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞–∂–¥—ã–π, —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º.", $key);
        } else {
            editMessage($from_id, "üîé –°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤:\n\n‚öôÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–¥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º.\n\n‚ÑπÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞–∂–¥—ã–π, —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º.", $message_id, $key);
        }
    }
    
    elseif ($text == '‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–∞–º–∏' or $data == 'back_cat') {
        step('manage_plans');
        if ($text) {
            sendMessage($from_id, "‚ÑπÔ∏è –ö–∞–∫–æ–π –ø–ª–∞–Ω –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å?\n\nüëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π:", $manage_plans);
        } else {
            editMessage($from_id, "‚ÑπÔ∏è –ö–∞–∫–æ–π –ø–ª–∞–Ω –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å?\n\nüëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π:", $message_id, $manage_plans);
        }
    }
    
    elseif ($data == 'manage_main_plan') {
        step('manage_main_plan');
        $count = $sql->query("SELECT * FROM `category`")->num_rows;
        if ($count == 0) {
            if (isset($data)) {
                editmessage($from_id, "‚ùå –°–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤ –ø—É—Å—Ç.", $message_id);
                exit();
            } else {
                sendmessage($from_id, "‚ùå –°–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤ –ø—É—Å—Ç.", $manage_server);
                exit();
            }
        }
        $result = $sql->query("SELECT * FROM `category`");
        $button[] = [['text' => '–£–¥–∞–ª–∏—Ç—å', 'callback_data' => 'null'], ['text' => '–°—Ç–∞—Ç—É—Å', 'callback_data' => 'null'], ['text' => '–ò–º—è', 'callback_data' => 'null'], ['text' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'callback_data' => 'null']];
        while ($row = $result->fetch_array()) {
            $status = $row['status'] == 'active' ? '‚úÖ' : '‚ùå';
            $button[] = [['text' => 'üóë', 'callback_data' => 'delete_limit-' . $row['code']], ['text' => $status, 'callback_data' => 'change_status_cat-' . $row['code']], ['text' => $row['name'], 'callback_data' => 'manage_list-' . $row['code']], ['text' => 'üëÅ', 'callback_data' => 'manage_cat-' . $row['code']]];
        }
        $button = json_encode(['inline_keyboard' => $button]);
        $count = $result->num_rows;
        $count_active = $sql->query("SELECT * FROM `category` WHERE `status` = 'active'")->num_rows;
        if (isset($data)) {
            editmessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç.\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤: <code>$count_active</code>  —à—Ç.", $message_id, $button);
        } else {
            sendMessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç.\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤: <code>$count_active</code>  —à—Ç.", $button);
        }
    }
    

    elseif ($data == 'manage_limit_plan') {
        step('manage_limit_plan');
        $count = $sql->query("SELECT * FROM `category_limit`")->num_rows;
        if ($count == 0) {
            if(isset($data)){
                editmessage($from_id, "‚ùå –°–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤ –ø—É—Å—Ç.", $message_id);
                exit();
            } else {
                sendmessage($from_id, "‚ùå –°–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤ –ø—É—Å—Ç.", $manage_server);
                exit();
            }
        }
        $result = $sql->query("SELECT * FROM `category_limit`");
        $button[] = [['text' => '–£–¥–∞–ª–∏—Ç—å', 'callback_data' => 'null'], ['text' => '–°—Ç–∞—Ç—É—Å', 'callback_data' => 'null'], ['text' => '–ò–º—è', 'callback_data' => 'null'], ['text' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'callback_data' => 'null']];
        while ($row = $result->fetch_array()) {
            $status = $row['status'] == 'active' ? '‚úÖ' : '‚ùå';
            $button[] = [['text' => 'üóë', 'callback_data' => 'delete_limit_limit-'.$row['code']], ['text' => $status, 'callback_data' => 'change_status_cat_limit-'.$row['code']], ['text' => $row['name'], 'callback_data' => 'manage_list_limit-'.$row['code']], ['text' => 'üëÅ', 'callback_data' => 'manage_cat_limit-'.$row['code']]];
        }
        $button = json_encode(['inline_keyboard' => $button]);
        $count = $result->num_rows;
        $count_active = $sql->query("SELECT * FROM `category_limit` WHERE `status` = 'active'")->num_rows;
        if (isset($data)) {
            editmessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç.\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤: <code>$count_active</code>  —à—Ç.", $message_id, $button);
        }else{
            sendMessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç.\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤: <code>$count_active</code>  —à—Ç.", $button);
        }
    }
    
    elseif ($data == 'manage_date_plan') {
        step('manage_date_plan');
        $count = $sql->query("SELECT * FROM `category_date`")->num_rows;
        if ($count == 0) {
            if(isset($data)){
                editmessage($from_id, "‚ùå –°–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤ –ø—É—Å—Ç.", $message_id);
                exit();
            } else {
                sendmessage($from_id, "‚ùå –°–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤ –ø—É—Å—Ç.", $manage_server);
                exit();
            }
        }
        $result = $sql->query("SELECT * FROM `category_date`");
        $button[] = [['text' => '–£–¥–∞–ª–∏—Ç—å', 'callback_data' => 'null'], ['text' => '–°—Ç–∞—Ç—É—Å', 'callback_data' => 'null'], ['text' => '–ò–º—è', 'callback_data' => 'null'], ['text' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'callback_data' => 'null']];
        while ($row = $result->fetch_array()) {
            $status = $row['status'] == 'active' ? '‚úÖ' : '‚ùå';
            $button[] = [['text' => 'üóë', 'callback_data' => 'delete_limit_date-'.$row['code']], ['text' => $status, 'callback_data' => 'change_status_cat_date-'.$row['code']], ['text' => $row['name'], 'callback_data' => 'manage_list_date-'.$row['code']], ['text' => 'üëÅ', 'callback_data' => 'manage_cat_date-'.$row['code']]];
        }
        $button = json_encode(['inline_keyboard' => $button]);
        $count = $result->num_rows;
        $count_active = $sql->query("SELECT * FROM `category_date` WHERE `status` = 'active'")->num_rows;
        if (isset($data)) {
            editmessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç.\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤: <code>$count_active</code>  —à—Ç.", $message_id, $button);
        }else{
            sendMessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç.\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤: <code>$count_active</code>  —à—Ç.", $button);
        }
    }
    
    elseif (strpos($data, 'change_status_cat-') !== false) {
        $code = explode('-', $data)[1];
        $info_cat = $sql->query("SELECT * FROM `category` WHERE `code` = '$code' LIMIT 1");
        $status = $info_cat->fetch_assoc()['status'];
        if ($status == 'active') {
            $sql->query("UPDATE `category` SET `status` = 'inactive' WHERE `code` = '$code'");
        } else {
            $sql->query("UPDATE `category` SET `status` = 'active' WHERE `code` = '$code'");
        }
        $button[] = [['text' => '–£–¥–∞–ª–∏—Ç—å', 'callback_data' => 'null'], ['text' => '–°—Ç–∞—Ç—É—Å', 'callback_data' => 'null'], ['text' => '–ò–º—è', 'callback_data' => 'null'], ['text' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'callback_data' => 'null']];
        $result = $sql->query("SELECT * FROM `category`");
        while ($row = $result->fetch_array()) {
            $status = $row['status'] == 'active' ? '‚úÖ' : '‚ùå';
            $button[] = [['text' => 'üóë', 'callback_data' => 'delete_limit-'.$row['code']], ['text' => $status, 'callback_data' => 'change_status_cat-'.$row['code']], ['text' => $row['name'], 'callback_data' => 'manage_list-'.$row['code']], ['text' => 'üëÅ', 'callback_data' => 'manage_cat-'.$row['code']]];
        }
        $button = json_encode(['inline_keyboard' => $button]);
        $count = $result->num_rows;
        $count_active = $sql->query("SELECT * FROM `category` WHERE `status` = 'active'")->num_rows;
        if (isset($data)) {
            editmessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç.\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤: <code>$count_active</code>  —à—Ç.", $message_id, $button);
        }else{
            sendMessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç.\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤: <code>$count_active</code>  —à—Ç.", $button);
        }
    }
    
    elseif (strpos($data, 'change_status_cat_limit-') !== false) {
        $code = explode('-', $data)[1];
        $info_cat = $sql->query("SELECT * FROM `category_limit` WHERE `code` = '$code' LIMIT 1");
        $status = $info_cat->fetch_assoc()['status'];
        if ($status == 'active') {
            $sql->query("UPDATE `category_limit` SET `status` = 'inactive' WHERE `code` = '$code'");
        } else {
            $sql->query("UPDATE `category_limit` SET `status` = 'active' WHERE `code` = '$code'");
        }
        $button[] = [['text' => '–£–¥–∞–ª–∏—Ç—å', 'callback_data' => 'null'], ['text' => '–°—Ç–∞—Ç—É—Å', 'callback_data' => 'null'], ['text' => '–ò–º—è', 'callback_data' => 'null'], ['text' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'callback_data' => 'null']];
        $result = $sql->query("SELECT * FROM `category_limit`");
        while ($row = $result->fetch_array()) {
            $status = $row['status'] == 'active' ? '‚úÖ' : '‚ùå';
            $button[] = [['text' => 'üóë', 'callback_data' => 'delete_limit_limit-'.$row['code']], ['text' => $status, 'callback_data' => 'change_status_cat_limit-'.$row['code']], ['text' => $row['name'], 'callback_data' => 'manage_list_limit-'.$row['code']], ['text' => 'üëÅ', 'callback_data' => 'manage_cat_limit-'.$row['code']]];
        }
        $button = json_encode(['inline_keyboard' => $button]);
        $count = $result->num_rows;
        $count_active = $sql->query("SELECT * FROM `category_limit` WHERE `status` = 'active'")->num_rows;
        if (isset($data)) {
            editmessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç.\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤: <code>$count_active</code>  —à—Ç.", $message_id, $button);
        }else{
            sendMessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç.\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤: <code>$count_active</code>  —à—Ç.", $button);
        }
    }
    
    elseif (strpos($data, 'change_status_cat_date-') !== false) {
        $code = explode('-', $data)[1];
        $info_cat = $sql->query("SELECT * FROM `category_date` WHERE `code` = '$code' LIMIT 1");
        $status = $info_cat->fetch_assoc()['status'];
        if ($status == 'active') {
            $sql->query("UPDATE `category_date` SET `status` = 'inactive' WHERE `code` = '$code'");
        } else {
            $sql->query("UPDATE `category_date` SET `status` = 'active' WHERE `code` = '$code'");
        }
        $button[] = [['text' => '–£–¥–∞–ª–∏—Ç—å', 'callback_data' => 'null'], ['text' => '–°—Ç–∞—Ç—É—Å', 'callback_data' => 'null'], ['text' => '–ò–º—è', 'callback_data' => 'null'], ['text' => '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'callback_data' => 'null']];
        $result = $sql->query("SELECT * FROM `category_date`");
        while ($row = $result->fetch_array()) {
            $status = $row['status'] == 'active' ? '‚úÖ' : '‚ùå';
            $button[] = [['text' => 'üóë', 'callback_data' => 'delete_limit_date-'.$row['code']], ['text' => $status, 'callback_data' => 'change_status_cat_date-'.$row['code']], ['text' => $row['name'], 'callback_data' => 'manage_list_date-'.$row['code']], ['text' => 'üëÅ', 'callback_data' => 'manage_cat_date-'.$row['code']]];
        }
        $button = json_encode(['inline_keyboard' => $button]);
        $count = $result->num_rows;
        $count_active = $sql->query("SELECT * FROM `category_date` WHERE `status` = 'active'")->num_rows;
        if (isset($data)) {
            editmessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç.\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤: <code>$count_active</code>  —à—Ç.", $message_id, $button);
        }else{
            sendMessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç.\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤: <code>$count_active</code>  —à—Ç.", $button);
        }
    }
    
    elseif (strpos($data, 'delete_limit-') !== false) {
        $code = explode('-', $data)[1];
        $sql->query("DELETE FROM `category` WHERE `code` = '$code' LIMIT 1");
        $count = $sql->query("SELECT * FROM `category`")->num_rows;
        if ($count == 0) {
            editmessage($from_id, "‚ùå –°–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤ –ø—É—Å—Ç.", $message_id);
            exit();
        }
        $result = $sql->query("SELECT * FROM `category`");
        while ($row = $result->fetch_array()) {
            $button[] = [['text' => 'üóë', 'callback_data' => 'delete_limit-'.$code], ['text' => $row['name'], 'callback_data' => 'manage_list-'.$row['code']]];
        }
        $button = json_encode(['inline_keyboard' => $button]);
        $count = $result->num_rows;
        editmessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç—É–∫", $message_id, $button);
    }
    
    elseif (strpos($data, 'delete_limit_limit-') !== false) {
        $code = explode('-', $data)[1];
        $sql->query("DELETE FROM `category_limit` WHERE `code` = '$code' LIMIT 1");
        $count = $sql->query("SELECT * FROM `category_limit`")->num_rows;
        if ($count == 0) {
            editmessage($from_id, "‚ùå –°–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤ –ø—É—Å—Ç.", $message_id);
            exit();
        }
        $result = $sql->query("SELECT * FROM `category_limit`");
        while ($row = $result->fetch_array()) {
            $button[] = [['text' => 'üóë', 'callback_data' => 'delete_limit_limit-'.$row['code']], ['text' => $status, 'callback_data' => 'change_status_cat_limit-'.$row['code']], ['text' => $row['name'], 'callback_data' => 'manage_list_limit-'.$row['code']], ['text' => 'üëÅ', 'callback_data' => 'manage_cat_limit-'.$row['code']]];
        }
        $button = json_encode(['inline_keyboard' => $button]);
        $count = $result->num_rows;
        editmessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç—É–∫", $message_id, $button);
    }
    
    elseif (strpos($data, 'delete_limit_date-') !== false) {
        $code = explode('-', $data)[1];
        $sql->query("DELETE FROM `category_date` WHERE `code` = '$code' LIMIT 1");
        $count = $sql->query("SELECT * FROM `category_date`")->num_rows;
        if ($count == 0) {
            editmessage($from_id, "‚ùå –°–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤ –ø—É—Å—Ç.", $message_id);
            exit();
        }
        $result = $sql->query("SELECT * FROM `category_date`");
        while ($row = $result->fetch_array()) {
            $button[] = [['text' => 'üóë', 'callback_data' => 'delete_limit_date-'.$row['code']], ['text' => $status, 'callback_data' => 'change_status_cat_date-'.$row['code']], ['text' => $row['name'], 'callback_data' => 'manage_list_date-'.$row['code']], ['text' => 'üëÅ', 'callback_data' => 'manage_cat_date-'.$row['code']]];
        }
        $button = json_encode(['inline_keyboard' => $button]);
        $count = $result->num_rows;
        editmessage($from_id, "üî∞–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–ª–µ–¥—É—é—â–∏–π:\n\nüî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>$count</code> —à—Ç—É–∫", $message_id, $button);
    }
    
    elseif (strpos($data, 'manage_list-') !== false) {
        $code = explode('-', $data)[1];
        $res = $sql->query("SELECT * FROM `category` WHERE `code` = '$code'")->fetch_assoc();
        alert($res['name']);
    }
    
    elseif (strpos($data, 'manage_list_limit-') !== false) {
        $code = explode('-', $data)[1];
        $res = $sql->query("SELECT * FROM `category_limit` WHERE `code` = '$code'")->fetch_assoc();
        alert($res['name']);
    }
    
    elseif (strpos($data, 'manage_list_date-') !== false) {
        $code = explode('-', $data)[1];
        $res = $sql->query("SELECT * FROM `category_date` WHERE `code` = '$code'")->fetch_assoc();
        alert($res['name']);
    }
    
    elseif (strpos($data, 'manage_cat-') !== false) {
        $code = explode('-', $data)[1];
        $res = $sql->query("SELECT * FROM `category` WHERE `code` = '$code'")->fetch_assoc();
        $key = json_encode(['inline_keyboard' => [
            [['text' => '–î–∞—Ç–∞', 'callback_data' => 'null'], ['text' => '–û–±—ä–µ–º', 'callback_data' => 'null'], ['text' => '–¶–µ–Ω–∞', 'callback_data' => 'null'], ['text' => '–ù–∞–∑–≤–∞–Ω–∏–µ', 'callback_data' => 'null']],
            [['text' => $res['date'], 'callback_data' => 'change_date-'.$res['code']], ['text' => $res['limit'], 'callback_data' => 'change_limit-'.$res['code']], ['text' => $res['price'], 'callback_data' => 'change_price-'.$res['code']], ['text' => '‚úèÔ∏è', 'callback_data' => 'change_name-'.$res['code']]],
            [['text' => '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'callback_data' => 'back_cat']],
        ]]);
        editmessage($from_id, "üåê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞–Ω–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞.\n\n‚ñ´Ô∏è–ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–∞: <b>{$res['name']}</b>\n‚ñ´Ô∏è–û–±—ä–µ–º: <code>{$res['limit']}</code>\n‚ñ´Ô∏è–î–∞—Ç–∞: <code>{$res['date']}</code>\n‚ñ´Ô∏è–¶–µ–Ω–∞: <code>{$res['price']}</code>\n\nüìé –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö!", $message_id, $key);
    }
    
    elseif (strpos($data, 'manage_cat_date-') !== false) {
        $code = explode('-', $data)[1];
        $res = $sql->query("SELECT * FROM `category_date` WHERE `code` = '$code'")->fetch_assoc();
        $key = json_encode(['inline_keyboard' => [
            [['text' => '–î–∞—Ç–∞', 'callback_data' => 'null'], ['text' => '–¶–µ–Ω–∞', 'callback_data' => 'null'], ['text' => '–ù–∞–∑–≤–∞–Ω–∏–µ', 'callback_data' => 'null']],
            [['text' => $res['date'], 'callback_data' => 'change_date_date-'.$res['code']], ['text' => $res['price'], 'callback_data' => 'change_price_date-'.$res['code']], ['text' => '‚úèÔ∏è', 'callback_data' => 'change_name_date-'.$res['code']]],
            [['text' => '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'callback_data' => 'back_cat']],
        ]]);
        editmessage($from_id, "üåê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞–Ω–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞.\n\n‚ñ´Ô∏è–ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–∞: <b>{$res['name']}</b>\n‚ñ´Ô∏è–î–∞—Ç–∞: <code>{$res['date']}</code>\n‚ñ´Ô∏è–¶–µ–Ω–∞: <code>{$res['price']}</code>\n\nüìé –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö!", $message_id, $key);
    }
    
    elseif (strpos($data, 'manage_cat_limit-') !== false) {
        $code = explode('-', $data)[1];
        $res = $sql->query("SELECT * FROM `category_limit` WHERE `code` = '$code'")->fetch_assoc();
        $key = json_encode(['inline_keyboard' => [
            [['text' => '–û–±—ä–µ–º', 'callback_data' => 'null'], ['text' => '–¶–µ–Ω–∞', 'callback_data' => 'null'], ['text' => '–ù–∞–∑–≤–∞–Ω–∏–µ', 'callback_data' => 'null']],
            [['text' => $res['limit'], 'callback_data' => 'change_limit_limit-'.$res['code']], ['text' => $res['price'], 'callback_data' => 'change_price_limit-'.$res['code']], ['text' => '‚úèÔ∏è', 'callback_data' => 'change_name_limit-'.$res['code']]],
            [['text' => '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'callback_data' => 'back_cat']],
        ]]);
        editmessage($from_id, "üåê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞–Ω–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞.\n\n‚ñ´Ô∏è–ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–∞: <b>{$res['name']}</b>\n‚ñ´Ô∏è–û–±—ä–µ–º: <code>{$res['limit']}</code>\n‚ñ´Ô∏è–¶–µ–Ω–∞: <code>{$res['price']}</code>\n\nüìé –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö!", $message_id, $key);
    }
    
    elseif (strpos($data, 'change_date-') !== false) {
        $code = explode('-', $data)[1];
        step('change_date-'.$code);
        sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:", $back_panel);
    }
    
    elseif (strpos($data, 'change_date_date-') !== false) {
        $code = explode('-', $data)[1];
        step('change_date_date-'.$code);
        sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:", $back_panel);
    }
    elseif (strpos($data, 'change_limit-') !== false) {
        $code = explode('-', $data)[1];
        step('change_limit-'.$code);
        sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:", $back_panel);
    }
    
    elseif (strpos($data, 'change_limit_limit-') !== false) {
        $code = explode('-', $data)[1];
        step('change_limit_limit-'.$code);
        sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:", $back_panel);
    }
    
    elseif (strpos($data, 'change_price-') !== false) {
        $code = explode('-', $data)[1];
        step('change_price-'.$code);
        sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:", $back_panel);
    }
    
    elseif (strpos($data, 'change_price_date-') !== false) {
        $code = explode('-', $data)[1];
        step('change_price_date-'.$code);
        sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:", $back_panel);
    }
    
    elseif (strpos($data, 'change_price_limit-') !== false) {
        $code = explode('-', $data)[1];
        step('change_price_limit-'.$code);
        sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —á–∏—Å–ª–∞:", $back_panel);
    }
    
    elseif (strpos($data, 'change_name-') !== false) {
        $code = explode('-', $data)[1];
        step('change_namee-'.$code);
        sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:", $back_panel);
    }
    
    elseif (strpos($data, 'change_name_date-') !== false) {
        $code = explode('-', $data)[1];
        step('change_name_date-'.$code);
        sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:", $back_panel);
    }
    
    elseif (strpos($data, 'change_name_limit-') !== false) {
        $code = explode('-', $data)[1];
        step('change_name_limit-'.$code);
        sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:", $back_panel);
    }
    
    elseif (strpos($user['step'], 'change_date-') !== false and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        $code = explode('-', $user['step'])[1];
        step('none');
        $sql->query("UPDATE `category` SET `date` = '$text' WHERE `code` = '$code' LIMIT 1");
        sendMessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", $manage_server);
    }
    
    elseif (strpos($user['step'], 'change_date_date-') !== false and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        $code = explode('-', $user['step'])[1];
        step('none');
        $sql->query("UPDATE `category_date` SET `date` = '$text' WHERE `code` = '$code' LIMIT 1");
        sendMessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", $manage_server);
    }
    
    elseif (strpos($user['step'], 'change_limit-') !== false and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        $code = explode('-', $user['step'])[1];
        step('none');
        $sql->query("UPDATE `category` SET `limit` = '$text' WHERE `code` = '$code' LIMIT 1");
        sendMessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", $manage_server);
    }
    
    elseif (strpos($user['step'], 'change_limit_limit-') !== false and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        $code = explode('-', $user['step'])[1];
        step('none');
        $sql->query("UPDATE `category_limit` SET `limit` = '$text' WHERE `code` = '$code' LIMIT 1");
        sendMessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", $manage_server);
    }
    
    elseif (strpos($user['step'], 'change_price-') !== false and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        $code = explode('-', $user['step'])[1];
        step('none');
        $sql->query("UPDATE `category` SET `price` = '$text' WHERE `code` = '$code' LIMIT 1");
        sendMessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", $manage_server);
    }
    
    elseif (strpos($user['step'], 'change_price_date-') !== false and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        $code = explode('-', $user['step'])[1];
        step('none');
        $sql->query("UPDATE `category_date` SET `price` = '$text' WHERE `code` = '$code' LIMIT 1");
        sendMessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", $manage_server);
    }
    
    elseif (strpos($user['step'], 'change_price_limit-') !== false and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        $code = explode('-', $user['step'])[1];
        step('none');
        $sql->query("UPDATE `category_limit` SET `price` = '$text' WHERE `code` = '$code' LIMIT 1");
        sendMessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", $manage_server);
    }
    
    elseif (strpos($user['step'], 'change_namee-') !== false and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        $code = explode('-', $user['step'])[1];
        step('none');
        $sql->query("UPDATE `category` SET `name` = '$text' WHERE `code` = '$code' LIMIT 1");
        sendMessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", $manage_server);
    }
    
    elseif (strpos($user['step'], 'change_name_date-') !== false and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
        $code = explode('-', $user['step'])[1];
        step('none');
        $sql->query("UPDATE `category_date` SET `name` = '$text' WHERE `code` = '$code' LIMIT 1");
        sendMessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", $manage_server);
    }
    
elseif (strpos($user['step'], 'change_name_limit-') !== false and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
    $code = explode('-', $user['step'])[1];
    step('none');
    $sql->query("UPDATE `category_limit` SET `name` = '$text' WHERE `code` = '$code' LIMIT 1");
    sendMessage($from_id, "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", $manage_server);
}

// ----------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ ----------- //
elseif ($text == 'üîé –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ / –º–∞—Å—Å–æ–≤–æ–≥–æ –ø–µ—Ä–µ—Å—ã–ª–∫–∏') {
    $info_send = $sql->query("SELECT * FROM `sends`")->fetch_assoc();
    if ($info_send['send'] == 'yes') $send_status = '‚úÖ'; else $send_status = '‚ùå';
    if ($info_send['step'] == 'send') $status_send = '‚úÖ'; else $status_send = '‚ùå';
    if ($info_send['step'] == 'forward') $status_forward = '‚úÖ'; else $status_forward = '‚ùå';
    sendMessage($from_id, "üëáüèª–°—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫ –æ–ø–∏—Å–∞–Ω –Ω–∏–∂–µ:\n\n‚ÑπÔ∏è –í –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É/–ø–µ—Ä–µ—Å—ã–ª–∫—É : <b>$send_status</b>\n‚¨ÖÔ∏è –ú–∞—Å—Å–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ : <b>$status_send</b>\n‚¨ÖÔ∏è –ú–∞—Å—Å–æ–≤–∞—è –ø–µ—Ä–µ—Å—ã–ª–∫–∞ : <b>$status_forward</b>\n\nüü• –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –º–∞—Å—Å–æ–≤—É—é –æ—Ç–ø—Ä–∞–≤–∫—É/–ø–µ—Ä–µ—Å—ã–ª–∫—É, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel_send.", $manage_message);
}

elseif ($text == '/cancel_send') {
    $sql->query("UPDATE `sends` SET `send` = 'no', `text` = 'null', `type` = 'null', `step` = 'null'");
    sendMessage($from_id, "‚úÖ –í–∞—à–∞ –º–∞—Å—Å–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞/–ø–µ—Ä–µ—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞.", $manage_message);
}

elseif ($text == 'üì¨ –ú–∞—Å—Å–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞') {
    step('send_all');
    sendMessage($from_id, "üëá –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π —Ç–µ–∫—Å—Ç –≤ –≤–∏–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", $back_panel);
}

elseif ($user['step'] == 'send_all') {
    step('none');
    if (isset($update->message->text)) {
        $type = 'text';
    } else {
        $type = $update->message->photo[count($update->message->photo) - 1]->file_id;
        $text = $update->message->caption;
    }
    $sql->query("UPDATE `sends` SET `send` = 'yes', `text` = '$text', `type` = '$type', `step` = 'send'");
    sendMessage($from_id, "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏!", $manage_message);
}

elseif ($text == 'üì¨ –ú–∞—Å—Å–æ–≤–∞—è –ø–µ—Ä–µ—Å—ã–ª–∫–∞') {
    step('for_all');
    sendMessage($from_id, "üëàüèª‚Å© –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–≤–æ–π —Ç–µ–∫—Å—Ç:", $back_panel);
}

elseif ($user['step'] == 'for_all') {
    step('none');
    sendMessage($from_id, "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –ø–µ—Ä–µ—Å—ã–ª–∫–∏!", $panel);
    $sql->query("UPDATE `sends` SET `send` = 'yes', `text` = '$message_id', `type` = '$from_id', `step` = 'forward'");
}

elseif ($text == 'üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é' or $text == 'üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é') {
    step('sendmessage_user1');
    sendMessage($from_id, "üî¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ–≤–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∂–µ–ª–∞–µ–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", $back_panel);
}

elseif ($user['step'] == 'sendmessage_user1' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
    if ($sql->query("SELECT `from_id` FROM `users` WHERE `from_id` = '$text'")->num_rows > 0) {
        step('sendmessage_user2');
        file_put_contents('id.txt', $text);
        sendMessage($from_id, "üëá –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞:", $back_panel);
    } else {
        step('sendmessage_user1');
        sendMessage($from_id, "‚ùå –£–∫–∞–∑–∞–Ω–Ω—ã–π –≤–∞–º–∏ —á–∏—Å–ª–æ–≤–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –±–æ—Ç–∞!", $back_panel);
    }
}

elseif ($user['step'] == 'sendmessage_user2' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
    step('none');
    $id = file_get_contents('id.txt');
    sendMessage($from_id, "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <code>$id</code>.", $manage_message);
    if (isset($update->message->text)) {
        sendmessage($id, $text);
    } else {
        $file_id = $update->message->photo[count($update->message->photo) - 1]->file_id;
        $caption = $update->message->caption;
        bot('sendphoto', ['chat_id' => $id, 'photo' => $file_id, 'caption' => $caption]);
    }
    unlink('id.txt');
}
 // ----------- —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ ----------- //
elseif ($text == 'üîé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ') {
    step('info_user');
    sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ–≤–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", $back_panel);
}

elseif ($user['step'] == 'info_user') {
    $info = $sql->query("SELECT * FROM `users` WHERE `from_id` = '$text'");
    if ($info->num_rows > 0) {
        step('none');
        $res_get = bot('getchatmember', ['user_id' => $text, 'chat_id' => $text]);
        $first_name = $res_get->result->user->first_name;
        $username = '@' . $res_get->result->user->username;
        $coin = number_format($info->fetch_assoc()['coin']) ?? 0;
        $count_service = $info->fetch_assoc()['count_service'] ?? 0;
        $count_payment = $info->fetch_assoc()['count_charge'] ?? 0;   
        sendMessage($from_id, "‚≠ïÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ [ <code>$text</code> ] —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞.\n\n‚ñ´Ô∏è–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $username\n‚ñ´Ô∏è–ù–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>$first_name</b>\n‚ñ´Ô∏è–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>$coin</code> —Ç–æ–º–∞–Ω\n‚ñ´Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>$count_service</code> —à—Ç—É–∫\n‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–∞—Ç–µ–∂–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>$count_payment</code> —à—Ç—É–∫", $manage_user);
    } else {
        sendMessage($from_id, "‚Äº –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>$text</code> –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Ä–æ–±–æ—Ç–∞!", $back_panel);
    }
}

elseif ($text == '‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å') {
    step('add_coin');
    sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ–≤–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", $back_panel);
}

elseif ($user['step'] == 'add_coin') {
    $user = $sql->query("SELECT * FROM `users` WHERE `from_id` = '$text'");
    if ($user->num_rows > 0) {
        step('add_coin2');
        file_put_contents('id.txt', $text);
        sendMessage($from_id, "üîé–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å:", $back_panel);
    } else {
        sendMessage($from_id, "‚Äº –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>$text</code> –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Ä–æ–±–æ—Ç–∞!", $back_panel);
    }
}

elseif ($user['step'] == 'add_coin2') {
    step('none');
    $id = file_get_contents('id.txt');
    $sql->query("UPDATE `users` SET `coin` = coin + $text WHERE `from_id` = '$id'");
    sendMessage($from_id, "‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.", $manage_user);
    sendMessage($id, "‚úÖ –í–∞—à —Å—á–µ—Ç –±—ã–ª –ø–æ–ø–æ–ª–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –Ω–∞ —Å—É–º–º—É <code>$text</code> —Ç–æ–º–∞–Ω.");
    unlink('id.txt');
}

elseif ($text == '‚ûñ –£–º–µ–Ω—å—à–∏—Ç—å –±–∞–ª–∞–Ω—Å') {
    step('rem_coin');
    sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ–≤–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", $back_panel);
}

elseif ($user['step'] == 'rem_coin' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
    $user = $sql->query("SELECT * FROM `users` WHERE `from_id` = '$text'");
    if ($user->num_rows > 0) {
        step('rem_coin2');
        file_put_contents('id.txt', $text);
        sendMessage($from_id, "üîé–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã—á–µ—Å—Ç—å:", $back_panel);
    } else {
        sendMessage($from_id, "‚Äº –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>$text</code> –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Ä–æ–±–æ—Ç–∞!", $back_panel);
    }
}

elseif ($user['step'] == 'rem_coin2' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {  
    step('none');
    $id = file_get_contents('id.txt');
    $sql->query("UPDATE `users` SET `coin` = coin - $text WHERE `from_id` = '$id'");
    sendMessage($from_id, "‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.", $manage_user);
    sendMessage($id, "‚úÖ –°–æ —Å—á–µ—Ç–∞ –≤–∞—Å —Å–ø–∏—Å–∞–Ω–æ <code>$text</code> —Ç–æ–º–∞–Ω–æ–≤ –ø–æ —Ä–µ—à–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.");
    unlink('id.txt');
}

elseif (strpos($data, 'cancel_fish') !== false) {
    $id = explode('-', $data)[1];
    editMessage($from_id, "‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ !", $message_id);
    sendMessage($id, "‚ùå –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞–º–∏ –ø–ª–∞—Ç–µ–∂ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∏ –≤–∞—à —Å—á–µ—Ç –Ω–µ –±—ã–ª –ø–æ–ø–æ–ª–Ω–µ–Ω !");
}

elseif (strpos($data, 'accept_fish') !== false) {
    $id = explode('-', $data)[1];
    $price = explode('-', $data)[2];
    $sql->query("UPDATE `users` SET `coin` = coin + $price WHERE `from_id` = '$id'");
    editMessage($from_id, "‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ !", $message_id);
    sendMessage($id, "‚úÖ –í–∞—à —Å—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ —Å—É–º–º—É <code>$price</code> —Ç–æ–º–∞–Ω–æ–≤ !");
}

elseif ($text == '‚ùå –ë–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å') {
    step('block');
    sendMessage($from_id, "üî¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞ :", $back_panel);
}

elseif ($user['step'] == 'block' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
    $user = $sql->query("SELECT * FROM `users` WHERE `from_id` = '$text'");
    if ($user->num_rows > 0) {
        step('none');
        $sql->query("UPDATE `users` SET `status` = 'inactive' WHERE `from_id` = '$text'");
        sendMessage($from_id, "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.", $manage_user);
    } else {
        sendMessage($from_id, "‚Äº –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>$text</code> –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Ä–æ–±–æ—Ç–∞ !", $back_panel);
    }
}

elseif ($text == '‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å') {
    step('unblock');
    sendmessage($from_id, "üî¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞ :", $back_panel);
}

elseif ($user['step'] == 'unblock' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é' ){
    $user = $sql->query("SELECT * FROM `users` WHERE `from_id` = '$text'");
    if ($user->num_rows > 0) {
        step('none');
        $sql->query("UPDATE `users` SET `status` = 'active' WHERE `from_id` = '$text'");
        sendMessage($from_id, "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.", $manage_user);
    } else {
        sendMessage($from_id, "‚Äº –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>$text</code> –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Ä–æ–±–æ—Ç–∞ !", $back_panel);  
    }
}

// ----------- —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ ----------- //
elseif ($text == '‚óΩ–†–∞–∑–¥–µ–ª—ã') {
    sendMessage($from_id, "üî∞–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω!");
}

elseif ($text == 'üö´ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–Ω—Ç–∏—Å–ø–∞–º–æ–º' or $data == 'back_spam') {
    if (isset($text)) {
        sendMessage($from_id, "üö´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–Ω—Ç–∏—Å–ø–∞–º–æ–º —Ä–æ–±–æ—Ç–∞!\n\n‚úèÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±—É—é –∏–∑ –∫–Ω–æ–ø–æ–∫ —Å–ª–µ–≤–∞, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: \n‚óΩÔ∏è@Proxygram", $manage_spam);
    } else {
        editMessage($from_id, "üö´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–Ω—Ç–∏—Å–ø–∞–º–æ–º —Ä–æ–±–æ—Ç–∞!\n\n‚úèÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±—É—é –∏–∑ –∫–Ω–æ–ø–æ–∫ —Å–ª–µ–≤–∞, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: \n‚óΩÔ∏è@Proxygram", $message_id, $manage_spam);
    }
}

elseif ($data == 'change_status_spam') {
    $status = $sql->query("SELECT * FROM `spam_setting`")->fetch_assoc()['status'];
    if ($status == 'active') {
        $sql->query("UPDATE `spam_setting` SET `status` = 'inactive'");
    } elseif ($status == 'inactive') {
        $sql->query("UPDATE `spam_setting` SET `status` = 'active'");
    }
    $manage_spam = json_encode(['inline_keyboard' => [
        [['text' => ($status == 'active') ? 'üî¥' : 'üü¢', 'callback_data' => 'change_status_spam'], ['text' => '‚ñ´Ô∏è–°—Ç–∞—Ç—É—Å :', 'callback_data' => 'null']],
        [['text' => ($spam_setting['status'] == 'ban') ? 'üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' : '‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—Ç—å', 'callback_data' => 'change_type_spam'], ['text' => '‚ñ´Ô∏è–ú–æ–¥–µ–ª—å –ø–æ–≤–µ–¥–µ–Ω–∏—è :', 'callback_data' => 'null']],
        [['text' => $spam_setting['time'] . ' —Å–µ–∫—É–Ω–¥', 'callback_data' => 'change_time_spam'], ['text' => '‚ñ´Ô∏è–í—Ä–µ–º—è : ', 'callback_data' => 'null']],
        [['text' => $spam_setting['count_message'] . ' —Å–æ–æ–±—â–µ–Ω–∏–π', 'callback_data' => 'change_count_spam'], ['text' => '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π : ', 'callback_data' => 'null']],
    ]]);
    editMessage($from_id, "üö´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–Ω—Ç–∏—Å–ø–∞–º–æ–º —Ä–æ–±–æ—Ç–∞!\n\n‚úèÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±—É—é –∏–∑ –∫–Ω–æ–ø–æ–∫ —Å–ª–µ–≤–∞, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: \n‚óΩÔ∏è@Proxygram", $message_id, $manage_spam);
}

elseif ($data == 'change_type_spam') {
    $type = $sql->query("SELECT * FROM `spam_setting`")->fetch_assoc()['type'];
    if ($type == 'ban') {
        $sql->query("UPDATE `spam_setting` SET `type` = 'warn'");
    } elseif ($type == 'warn') {
        $sql->query("UPDATE `spam_setting` SET `type` = 'ban'");
    }
    $manage_spam = json_encode(['inline_keyboard' => [
        [['text' => ($spam_setting['status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_spam'], ['text' => '‚ñ´Ô∏è–°—Ç–∞—Ç—É—Å :', 'callback_data' => 'null']],
        [['text' => ($type == 'ban') ? '‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—Ç—å' : 'üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', 'callback_data' => 'change_type_spam'], ['text' => '‚ñ´Ô∏è–ú–æ–¥–µ–ª—å –ø–æ–≤–µ–¥–µ–Ω–∏—è :', 'callback_data' => 'null']],
        [['text' => $spam_setting['time'] . ' —Å–µ–∫—É–Ω–¥', 'callback_data' => 'change_time_spam'], ['text' => '‚ñ´Ô∏è–í—Ä–µ–º—è : ', 'callback_data' => 'null']],
        [['text' => $spam_setting['count_message'] . ' —Å–æ–æ–±—â–µ–Ω–∏–π', 'callback_data' => 'change_count_spam'], ['text' => '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π : ', 'callback_data' => 'null']],
    ]]);
    editMessage($from_id, "üö´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–Ω—Ç–∏—Å–ø–∞–º–æ–º —Ä–æ–±–æ—Ç–∞!\n\n‚úèÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±—É—é –∏–∑ –∫–Ω–æ–ø–æ–∫ —Å–ª–µ–≤–∞, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: \n‚óΩÔ∏è@Proxygram", $message_id, $manage_spam);
}

elseif ($data == 'change_count_spam') {
    step('change_count_spam');
    editMessage($from_id, "üÜô –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞ :", $message_id, $back_spam);
}

elseif ($user['step'] == 'change_count_spam') {
    if (is_numeric($text)) {
        step('none');
        $sql->query("UPDATE `spam_setting` SET `count_message` = '$text'");
        $manage_spam = json_encode(['inline_keyboard' => [
            [['text' => ($spam_setting['status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_spam'], ['text' => '‚ñ´Ô∏è–°—Ç–∞—Ç—É—Å :', 'callback_data' => 'null']],
            [['text' => ($spam_setting['type'] == 'ban') ? 'üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' : '‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—Ç—å', 'callback_data' => 'change_type_spam'], ['text' => '‚ñ´Ô∏è–ú–æ–¥–µ–ª—å –ø–æ–≤–µ–¥–µ–Ω–∏—è :', 'callback_data' => 'null']],
            [['text' => $spam_setting['time'] . ' —Å–µ–∫—É–Ω–¥', 'callback_data' => 'change_time_spam'], ['text' => '‚ñ´Ô∏è–í—Ä–µ–º—è : ', 'callback_data' => 'null']],
            [['text' => $text . ' —Å–æ–æ–±—â–µ–Ω–∏–π', 'callback_data' => 'change_count_spam'], ['text' => '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π : ', 'callback_data' => 'null']],
        ]]);
        sendMessage($from_id, "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω—ã !\nüö´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–Ω—Ç–∏—Å–ø–∞–º–æ–º —Ä–æ–±–æ—Ç–∞!\n\n‚úèÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±—É—é –∏–∑ –∫–Ω–æ–ø–æ–∫ —Å–ª–µ–≤–∞, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: \n‚óΩÔ∏è@Proxygram", $manage_spam);
    } else {
        sendMessage($from_id, "‚ùå –í–∞—à –≤–≤–æ–¥ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º !", $back_spam);
    }
}

    
elseif ($data == 'change_time_spam') {
    step('change_time_spam');
    editMessage($from_id, "üÜô –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞:", $message_id, $back_spam);
}

elseif ($user['step'] == 'change_time_spam') {
    if (is_numeric($text)) {
        step('none');
        $sql->query("UPDATE `spam_setting` SET `time` = '$text'");
        $manage_spam = json_encode(['inline_keyboard' => [
            [['text' => ($spam_setting['status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_spam'], ['text' => '‚ñ´Ô∏è–°–æ—Å—Ç–æ—è–Ω–∏–µ :', 'callback_data' => 'null']],
            [['text' => ($spam_setting['type'] == 'ban') ? 'üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞' : '‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', 'callback_data' => 'change_type_spam'], ['text' => '‚ñ´Ô∏è–ú–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ :', 'callback_data' => 'null']],
            [['text' => $text . ' —Å–µ–∫—É–Ω–¥', 'callback_data' => 'change_time_spam'], ['text' => '‚ñ´Ô∏è–í—Ä–µ–º—è : ', 'callback_data' => 'null']],
            [['text' => $spam_setting['count_message'] . ' —Å–æ–æ–±—â–µ–Ω–∏–π', 'callback_data' => 'change_count_spam'], ['text' => '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π : ', 'callback_data' => 'null']],
        ]]);
        sendMessage($from_id, "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω—ã!\nüö´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–Ω—Ç–∏—Å–ø–∞–º–æ–º –±–æ—Ç–∞!\n\n‚úèÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±—É—é –∏–∑ –∫–Ω–æ–ø–æ–∫ —Å–ª–µ–≤–∞, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π: \n‚óΩÔ∏è@Proxygram", $manage_spam);
    } else {
        sendMessage($from_id, "‚ùå –í–≤–µ–¥–µ–Ω–Ω–æ–µ –≤–∞–º–∏ —á–∏—Å–ª–æ –Ω–µ–≤–µ—Ä–Ω–æ!", $back_spam);
    }
}

elseif ($text == '‚óΩ–ö–∞–Ω–∞–ª—ã') {    
    $lockSQL = $sql->query("SELECT `chat_id`, `name` FROM `lock`");
    if (mysqli_num_rows($lockSQL) > 0) {
        $locksText = "‚òëÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª (üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–∞–Ω–∞–ª–æ–≤)\n\nüö¶ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è :\n1 - üëÅ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–º—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞–∂–¥–æ–≥–æ.\n2 - –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ( üóë )\n3 - –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ( ‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É )";
        $button[] = [['text' => 'üóù –ò–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏', 'callback_data' => 'none'], ['text' => 'üóë –£–¥–∞–ª–∏—Ç—å', 'callback_data' => 'none']];
        while ($row = $lockSQL->fetch_assoc()) {
            $name = $row['name'];
            $link = str_replace("@", "", $row['chat_id']);
            $button[] = [['text' => $name, 'url' => "https://t.me/$link"], ['text' => 'üóë', 'callback_data' => "remove_lock-{$row['chat_id']}"]];
        }
    } else $locksText = '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É ( ‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É ).';
    $button[] = [['text' => '‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É', 'callback_data' => 'addLock']];
    if ($data) editmessage($from_id, $locksText, $message_id, json_encode(['inline_keyboard' => $button]));
    else sendMessage($from_id, $locksText, json_encode(['inline_keyboard' => $button]));
}

elseif($data == 'addLock'){
    step('add_channel');
    deleteMessage($from_id, $message_id);
    sendMessage($from_id, "‚úî –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–º—è –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å —Å–∏–º–≤–æ–ª–æ–º @:", $back_panel);
}

elseif ($user['step'] == 'add_channel' and $data != 'back_look' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
    if (strpos($text, "@") !== false) { 
        if ($sql->query("SELECT * FROM `lock` WHERE `chat_id` = '$text'")->num_rows == 0) {
            $info_channel = bot('getChatMember', ['chat_id' => $text, 'user_id' => bot('getMe')->result->id]);
            if ($info_channel->result->status == 'administrator') {
                step('none');
                $channel_name = bot('getChat', ['chat_id' => $text])->result->title ?? '–±–µ–∑ –∏–º–µ–Ω–∏';
                $sql->query("INSERT INTO `lock`(`name`, `chat_id`) VALUES ('$channel_name', '$text')");
                $txt = "‚úÖ –í–∞—à –∫–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫.\n\nüÜî - $text";
                sendmessage($from_id, $txt, $panel);
            } else { 
                sendMessage($from_id, "‚ùå –†–æ–±–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –∫–∞–Ω–∞–ª–µ $text!", $back_panel);
            }
        } else {
            sendMessage($from_id, "‚ùå –≠—Ç–æ—Ç –∫–∞–Ω–∞–ª —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ!", $back_panel);
        }
    } else {
        sendmessage($from_id, "‚ùå –í–∞—à –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —é–∑–µ—Ä–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª @!", $back_panel);
    }
}

elseif (strpos($data, "remove_lock-") !== false) {
    $link = explode("-", $data)[1];
    $sql->query("DELETE FROM `lock` WHERE `chat_id` = '$link' LIMIT 1");
    $lockSQL = $sql->query("SELECT `chat_id`, `name` FROM `lock`");
    if (mysqli_num_rows($lockSQL) > 0) {
        $locksText = "‚òëÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª (üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–∞–Ω–∞–ª–æ–≤)\n\nüö¶ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è :\n1 - üëÅ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–º—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞–∂–¥–æ–≥–æ.\n2 - –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ( üóë )\n3 - –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ( ‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É )";
        $button[] = [['text' => 'üóù –ò–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏', 'callback_data' => 'none'], ['text' => 'üóë –£–¥–∞–ª–∏—Ç—å', 'callback_data' => 'none']];
        while ($row = $lockSQL->fetch_assoc()) {
            $name = $row['name'];
            $link = str_replace("@", "", $row['chat_id']);
            $button[] = [['text' => $name, 'url' => "https://t.me/$link"], ['text' => 'üóë', 'callback_data' => "remove_lock_{$row['chat_id']}"]];
        }
    } else $locksText = '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É ( ‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É ).';
    $button[] = [['text' => '‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É', 'callback_data' => 'addLock']];
    if ($data) editmessage($from_id, $locksText, $message_id, json_encode(['inline_keyboard' => $button]));
    else sendMessage($from_id, $locksText, json_encode(['inline_keyboard' => $button]));
}

// ----------------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–ª–∞—Ç–æ–π ----------------- //
elseif ($text == '‚óΩ–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —à–ª—é–∑–∞') {
    sendMessage($from_id, "‚öôÔ∏èÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —à–ª—é–∑–∞.\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π:", $manage_payment);
}

elseif ($text == '‚úèÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ/–≤—ã–∫–ª—é—á–µ–Ω–æ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —à–ª—é–∑–∞ –±–æ—Ç–∞') {
    sendMessage($from_id, "‚úèÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ/–≤—ã–∫–ª—é—á–µ–Ω–æ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —à–ª—é–∑–∞ –±–æ—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–µ:", $manage_off_on_paymanet);
}

elseif ($data == 'change_status_zarinpal') {
    $status = $sql->query("SELECT * FROM `payment_setting`")->fetch_assoc()['zarinpal_status'];
    if ($status == 'active') {
        $sql->query("UPDATE `payment_setting` SET `zarinpal_status` = 'inactive'");
    } elseif ($status == 'inactive') {
        $sql->query("UPDATE `payment_setting` SET `zarinpal_status` = 'active'");
    }
    $manage_off_on_paymanet = json_encode(['inline_keyboard' => [
        [['text' => ($status == 'inactive') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_zarinpal'], ['text' => '‚ñ´Ô∏è–ó–∞—Ä–∏–Ω–ø–∞–ª :', 'callback_data' => 'null']],
        [['text' => ($payment_setting['idpay_status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_idpay'], ['text' => '‚ñ´Ô∏è–ò–¥–ø–µ–π :', 'callback_data' => 'null']],
        [['text' => ($payment_setting['nowpayment_status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_nowpayment'], ['text' => ': nowpayment ‚ñ´Ô∏è', 'callback_data' => 'null']],
        [['text' => ($payment_setting['card_status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_card'], ['text' => '‚ñ´Ô∏è–ö–∞—Ä—Ç–∞ –∫ –∫–∞—Ä—Ç–µ :', 'callback_data' => 'null']]
    ]]);
    editMessage($from_id, "‚úèÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ/–≤—ã–∫–ª—é—á–µ–Ω–æ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —à–ª—é–∑–∞ –±–æ—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–µ:", $message_id, $manage_off_on_paymanet);
}

elseif ($data == 'change_status_idpay') {
    $status = $sql->query("SELECT * FROM `payment_setting`")->fetch_assoc()['idpay_status'];
    if ($status == 'active') {
        $sql->query("UPDATE `payment_setting` SET `idpay_status` = 'inactive'");
    } elseif ($status == 'inactive') {
        $sql->query("UPDATE `payment_setting` SET `idpay_status` = 'active'");
    }
    $manage_off_on_paymanet = json_encode(['inline_keyboard' => [
        [['text' => ($payment_setting['zarinpal_status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_zarinpal'], ['text' => '‚ñ´Ô∏è–ó–∞—Ä–∏–Ω–ø–∞–ª :', 'callback_data' => 'null']],
        [['text' => ($status == 'inactive') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_idpay'], ['text' => '‚ñ´Ô∏è–ò–¥–ø–µ–π :', 'callback_data' => 'null']],
        [['text' => ($payment_setting['nowpayment_status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_nowpayment'], ['text' => ': nowpayment ‚ñ´Ô∏è', 'callback_data' => 'null']],
        [['text' => ($payment_setting['card_status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_card'], ['text' => '‚ñ´Ô∏è–ö–∞—Ä—Ç–∞ –∫ –∫–∞—Ä—Ç–µ :', 'callback_data' => 'null']]
    ]]);
    editMessage($from_id, "‚úèÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ/–≤—ã–∫–ª—é—á–µ–Ω–æ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —à–ª—é–∑–∞ –±–æ—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–µ:", $message_id, $manage_off_on_paymanet);
}
 
elseif ($data == 'change_status_nowpayment') {
    $status = $sql->query("SELECT * FROM `payment_setting`")->fetch_assoc()['nowpayment_status'];
    if ($status == 'active') {
        $sql->query("UPDATE `payment_setting` SET `nowpayment_status` = 'inactive'");
    } elseif ($status == 'inactive') {
        $sql->query("UPDATE `payment_setting` SET `nowpayment_status` = 'active'");
    }
    $manage_off_on_paymanet = json_encode(['inline_keyboard' => [
        [['text' => ($payment_setting['zarinpal_status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_zarinpal'], ['text' => '‚ñ´Ô∏è–ó–∞—Ä–∏–Ω –ü–∞–ª :', 'callback_data' => 'null']],
        [['text' => ($payment_setting['idpay_status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_idpay'], ['text' => '‚ñ´Ô∏è–ê–π–¥–∏ –ü–µ–π :', 'callback_data' => 'null']],
        [['text' => ($status == 'inactive') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_nowpayment'], ['text' => ': nowpayment ‚ñ´Ô∏è', 'callback_data' => 'null']],
        [['text' => ($payment_setting['card_status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_card'], ['text' => '‚ñ´Ô∏è–ö–∞—Ä—Ç–∞ –∫ –∫–∞—Ä—Ç–µ :', 'callback_data' => 'null']]
    ]]);
    editMessage($from_id, "‚úèÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —à–ª—é–∑–∞ –±–æ—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–µ:", $message_id, $manage_off_on_paymanet);
}

elseif ($data == 'change_status_card') {
    $status = $sql->query("SELECT * FROM `payment_setting`")->fetch_assoc()['card_status'];
    if ($status == 'active') {
        $sql->query("UPDATE `payment_setting` SET `card_status` = 'inactive'");
    } elseif ($status == 'inactive') {
        $sql->query("UPDATE `payment_setting` SET `card_status` = 'active'");
    }
    $manage_off_on_paymanet = json_encode(['inline_keyboard' => [
        [['text' => ($payment_setting['zarinpal_status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_zarinpal'], ['text' => '‚ñ´Ô∏è–ó–∞—Ä–∏–Ω –ü–∞–ª :', 'callback_data' => 'null']],
        [['text' => ($payment_setting['idpay_status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_idpay'], ['text' => '‚ñ´Ô∏è–ê–π–¥–∏ –ü–µ–π :', 'callback_data' => 'null']],
        [['text' => ($payment_setting['nowpayment_status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_nowpayment'], ['text' => ': nowpayment ‚ñ´Ô∏è', 'callback_data' => 'null']],
        [['text' => ($status == 'inactive') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_card'], ['text' => '‚ñ´Ô∏è–ö–∞—Ä—Ç–∞ –∫ –∫–∞—Ä—Ç–µ :', 'callback_data' => 'null']]
    ]]);
    editMessage($from_id, "‚úèÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —à–ª—é–∑–∞ –±–æ—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–µ:", $message_id, $manage_off_on_paymanet);
}

elseif ($text == '‚ñ´Ô∏è–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã') {
    step('set_card_number');
    sendMessage($from_id, "ü™™ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ —Ç–æ—á–Ω–æ:", $back_panel);
}

elseif ($user['step'] == 'set_card_number') {
    if (is_numeric($text)) {
        step('none');
        $sql->query("UPDATE `payment_setting` SET `card_number` = '$text'");
        sendMessage($from_id, "‚úÖ –í–∞—à –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n\n‚óΩÔ∏è–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã : <code>$text</code>", $manage_payment);
    } else {
        sendMessage($from_id, "‚ùå –í–∞—à –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ!", $back_panel);
    }
}

elseif ($text == '‚ñ´Ô∏è–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã') {
    step('set_card_number_name');
    sendMessage($from_id, "#Ô∏è‚É£ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞—Ä—Ç—ã —Ç–æ—á–Ω–æ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:", $back_panel);
}

elseif ($user['step'] == 'set_card_number_name') {
    step('none');
    $sql->query("UPDATE `payment_setting` SET `card_number_name` = '$text'");
    sendMessage($from_id, "‚úÖ –í–ª–∞–¥–µ–ª–µ—Ü –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n\n‚óΩÔ∏è–í–ª–∞–¥–µ–ª–µ—Ü –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã : <code>$text</code>", $manage_payment);
}

elseif ($text == '‚óΩ NOWPayments') {
    step('set_nowpayment_token');
    sendMessage($from_id, "üîé –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π api_key:", $back_panel);
}

elseif ($user['step'] == 'set_nowpayment_token') {
    step('none');
    $sql->query("UPDATE `payment_setting` SET `nowpayment_token` = '$text'");
    sendMessage($from_id, "‚úÖ –£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!", $manage_payment);
}

elseif ($text == '‚ñ´Ô∏è–ê–π–¥–∏ –ü–µ–π') {
    step('set_idpay_token');
    sendMessage($from_id, "üîé –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π api_key –ê–π–¥–∏ –ü–µ–π:", $back_panel);
}

elseif ($user['step'] == 'set_idpay_token') {
    step('none');
    $sql->query("UPDATE `payment_setting` SET `idpay_token` = '$text'");
    sendMessage($from_id, "‚úÖ –£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!", $manage_payment);
}

elseif ($text == '‚ñ´Ô∏è–ó–∞—Ä–∏–Ω –ü–∞–ª') {
    step('set_zarinpal_token');
    sendMessage($from_id, "üîé –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π api_key –ó–∞—Ä–∏–Ω –ü–∞–ª:", $back_panel);
}

elseif ($user['step'] == 'set_zarinpal_token') {
    step('none');
    $sql->query("UPDATE `payment_setting` SET `zarinpal_token` = '$text'");
    sendMessage($from_id, "‚úÖ –£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!", $manage_payment);
}

// -----------------manage copens ----------------- //
elseif ($text == 'üéÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏' or $data == 'back_copen') {
    step('none');
    if (isset($text)) {
        sendMessage($from_id, "üéÅ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏ –±–æ—Ç–∞!\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: \n‚óΩÔ∏è@Proxygram", $manage_copens);
    } else {
        editMessage($from_id, "üéÅ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏ –±–æ—Ç–∞!\n\nüëáüèª–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: \n‚óΩÔ∏è@Proxygram", $message_id, $manage_copens);
    }
}

elseif ($data == 'add_copen') {
    step('add_copen');
    editMessage($from_id, "üÜï –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –ø—Ä–æ–º–æ–∫–æ–¥:", $message_id, $back_copen);
}

elseif ($user['step'] == 'add_copen') {
    step('send_percent');
    file_put_contents('add_copen.txt', "$text\n", FILE_APPEND);
    sendMessage($from_id, "üî¢ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ [ <code>$text</code> ] –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞:", $back_copen);
}
    
elseif ($user['step'] == 'send_percent') {
    if (is_numeric($text)) {
        step('send_count_use');
        file_put_contents('add_copen.txt', "$text\n", FILE_APPEND);
        sendMessage($from_id, "üî¢ –°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥? –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ:", $back_copen);
    } else {
        sendMessage($from_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ —á–∏—Å–ª–∞!", $back_copen);
    }
}

elseif ($user['step'] == 'send_count_use') {
    if (is_numeric($text)) {
        step('none');
        $copen = explode("\n", file_get_contents('add_copen.txt'));
        $sql->query("INSERT INTO `copens` (`copen`, `percent`, `count_use`, `status`) VALUES ('{$copen[0]}', '{$copen[1]}', '{$text}', 'active')");
        sendMessage($from_id, "‚úÖ –í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!", $back_copen);
        unlink('add_copen.txt');
    } else {
        sendMessage($from_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ —á–∏—Å–ª–∞!", $back_copen);
    }
}

elseif ($data == 'manage_copens') {
    step('manage_copens');
    $copens = $sql->query("SELECT * FROM `copens`");
    if ($copens->num_rows > 0) {
        $key[] = [['text' => '‚ñ´Ô∏è–£–¥–∞–ª–∏—Ç—å', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–°—Ç–∞—Ç—É—Å', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ü—Ä–æ—Ü–µ–Ω—Ç', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–¥', 'callback_data' => 'null']];
        while ($row = $copens->fetch_assoc()) {
            $key[] = [['text' => 'üóë', 'callback_data' => 'delete_copen-'.$row['copen']], ['text' => ($row['status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_copen-'.$row['copen']], ['text' => $row['count_use'], 'callback_data' => 'change_countuse_copen-'.$row['copen']], ['text' => $row['percent'], 'callback_data' => 'change_percent_copen-'.$row['copen']], ['text' => $row['copen'], 'callback_data' => 'change_code_copen-'.$row['copen']]];
        }
        $key[] = [['text' => 'üîô –ù–∞–∑–∞–¥', 'callback_data' => 'back_copen']];
        $key = json_encode(['inline_keyboard' => $key]);
        editMessage($from_id, "‚úèÔ∏è –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:\n\n‚¨ÖÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞–∂–¥—ã–π, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n‚óΩÔ∏è@Proxygram", $message_id, $key);
    } else {
        alert('‚ùå –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤!');
    }
}

elseif (strpos($data, 'delete_copen-') !== false) {
    $copen = explode('-', $data)[1];
    alert('üóë –ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.', false);
    $sql->query("DELETE FROM `copens` WHERE `copen` = '$copen'");
    $copens = $sql->query("SELECT * FROM `copens`");
    if ($copens->num_rows > 0) {
        $key[] = [['text' => '‚ñ´Ô∏è–£–¥–∞–ª–∏—Ç—å', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–°—Ç–∞—Ç—É—Å', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ü—Ä–æ—Ü–µ–Ω—Ç', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–¥', 'callback_data' => 'null']];
        while ($row = $copens->fetch_assoc()) {
            $key[] = [['text' => 'üóë', 'callback_data' => 'delete_copen-'.$row['copen']], ['text' => ($row['status'] == 'active') ? 'üü¢' : 'üî¥', 'callback_data' => 'change_status_copen-'.$row['copen']], ['text' => $row['count_use'], 'callback_data' => 'change_countuse_copen-'.$row['copen']], ['text' => $row['percent'], 'callback_data' => 'change_percent_copen-'.$row['copen']], ['text' => $row['copen'], 'callback_data' => 'change_code_copen-'.$row['copen']]];
        }
        $key[] = [['text' => 'üîô –ù–∞–∑–∞–¥', 'callback_data' => 'back_copen']];
        $key = json_encode(['inline_keyboard' => $key]);
        editMessage($from_id, "‚úèÔ∏è –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:\n\n‚¨ÖÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞–∂–¥—ã–π, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n‚óΩÔ∏è@Proxygram", $message_id, $key);
    } else {
        editMessage($from_id, "‚ùå –ù–µ—Ç –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.", $message_id, $manage_copens);
    }
}

elseif (strpos($data, 'change_status_copen-') !== false) {
    $copen = explode('-', $data)[1];
    $copen_status = $sql->query("SELECT `status` FROM `copens` WHERE `copen` = '$copen'")->fetch_assoc();
    if ($copen_status['status'] == 'active') {
        $sql->query("UPDATE `copens` SET `status` = 'inactive' WHERE `copen` = '$copen'");    
    } else{
        $sql->query("UPDATE `copens` SET `status` = 'active' WHERE `copen` = '$copen'");
    }
    
    $copens = $sql->query("SELECT * FROM `copens`");
    if ($copens->num_rows > 0) {
        $key[] = [['text' => '‚ñ´Ô∏è–£–¥–∞–ª–∏—Ç—å', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–°—Ç–∞—Ç—É—Å', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ü—Ä–æ—Ü–µ–Ω—Ç', 'callback_data' => 'null'], ['text' => '‚ñ´Ô∏è–ö–æ–¥', 'callback_data' => 'null']];
        while ($row = $copens->fetch_assoc()) {
            if ($row['copen'] == $copen) {
                $status = ($copen_status['status'] == 'active') ? 'üî¥' : 'üü¢';
            } else {
                $status = ($row['status'] == 'active') ? 'üü¢' : 'üî¥';
            }
            $key[] = [['text' => 'üóë', 'callback_data' => 'delete_copen-'.$row['copen']], ['text' => $status, 'callback_data' => 'change_status_copen-'.$row['copen']], ['text' => $row['count_use'], 'callback_data' => 'change_countuse_copen-'.$row['copen']], ['text' => $row['percent'], 'callback_data' => 'change_percent_copen-'.$row['copen']], ['text' => $row['copen'], 'callback_data' => 'change_code_copen-'.$row['copen']]];
        }
        $key[] = [['text' => 'üîô –ù–∞–∑–∞–¥', 'callback_data' => 'back_copen']];
        $key = json_encode(['inline_keyboard' => $key]);
        editMessage($from_id, "‚úèÔ∏è –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:\n\n‚¨ÖÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞–∂–¥—ã–π, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n‚óΩÔ∏è@Proxygram", $message_id, $key);
    } else {
        editMessage($from_id, "‚ùå –ù–µ—Ç –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.", $message_id, $manage_copens);
    }
}

elseif (strpos($data, 'change_countuse_copen-') !== false) {
    $copen = explode('-', $data)[1];
    step('change_countuse_copen-'.$copen);
    editMessage($from_id, "üî¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", $message_id, $back_copen);
}

elseif (strpos($user['step'], 'change_countuse_copen-') !== false) {
    if (is_numeric($text)) {
        $copen = explode('-', $user['step'])[1];
        $sql->query("UPDATE `copens` SET `count_use` = '$text' WHERE `copen` = '$copen'");
        sendMessage($from_id, "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.", $manage_copens);
    } else {
        sendMessage($from_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ —á–∏—Å–ª–∞!", $back_copen);
    }
}
   
elseif (strpos($data, 'change_percent_copen-') !== false) {
    $copen = explode('-', $data)[1];
    step('change_percent_copen-'.$copen);
    editMessage($from_id, "üî¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", $message_id, $back_copen);
}

elseif (strpos($user['step'], 'change_percent_copen-') !== false) {
    if (is_numeric($text)) {
        $copen = explode('-', $user['step'])[1];
        $sql->query("UPDATE `copens` SET `percent` = '$text' WHERE `copen` = '$copen'");
        sendMessage($from_id, "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.", $manage_copens);
    } else {
        sendMessage($from_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.", $back_copen);
    }
}

elseif (strpos($data, 'change_code_copen-') !== false) {
    $copen = explode('-', $data)[1];
    step('change_code_copen-'.$copen);
    editMessage($from_id, "üî¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", $message_id, $back_copen);
}

elseif (strpos($user['step'], 'change_code_copen-') !== false) {
    $copen = explode('-', $user['step'])[1];
    $sql->query("UPDATE `copens` SET `copen` = '$text' WHERE `copen` = '$copen'");
    sendMessage($from_id, "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.", $manage_copens);
}

// -----------------—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞–º–∏ ----------------- //
elseif ($text == '‚óΩ–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤ –±–æ—Ç–∞') {
    sendMessage($from_id, "‚öôÔ∏èÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤ –±–æ—Ç–∞.\n\nüëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π:", $manage_texts);
}

elseif ($text == '‚úèÔ∏è –¢–µ–∫—Å—Ç —Å—Ç–∞—Ä—Ç–∞') {
    step('set_start_text');
    sendMessage($from_id, "üëá –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ä—Ç–∞:", $back_panel);
}

elseif ($user['step'] == 'set_start_text') {
    step('none');
    $texts['start'] = str_replace('
    ', '\n', $text);
    file_put_contents('texts.json', json_encode($texts));
    sendMessage($from_id, "‚úÖ –¢–µ–∫—Å—Ç —Å—Ç–∞—Ä—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!", $manage_texts);
}

elseif ($text == '‚úèÔ∏è –¢–µ–∫—Å—Ç —Ç–∞—Ä–∏—Ñ–æ–≤') {
    step('set_tariff_text');
    sendMessage($from_id, "üëá –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Ç–∞—Ä–∏—Ñ–æ–≤ —É—Å–ª—É–≥:", $back_panel);
}

elseif ($user['step'] == 'set_tariff_text') {
    step('none');
    $texts['service_tariff'] = str_replace('
    ', '\n', $text);
    file_put_contents('texts.json', json_encode($texts));
    sendMessage($from_id, "‚úÖ –¢–µ–∫—Å—Ç —Ç–∞—Ä–∏—Ñ–æ–≤ —É—Å–ª—É–≥ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!", $manage_text);
}

elseif ($text == '‚úèÔ∏è –¢–µ–∫—Å—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é') {
    step('none');
    sendMessage($from_id, "‚úèÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫—É—é —á–∞—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å?\n\nüëá –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:", $set_text_edu);
}

elseif (strpos($data, 'set_edu_') !== false) {
    $sys = explode('_', $data)[2];
    step('set_edu_'.$sys);
    sendMessage($from_id, "üëáüèª–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ:\n\n‚¨ÖÔ∏è –í—ã–±—Ä–∞–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: <b>$sys</b>", $back_panel);
}

elseif (strpos($user['step'], 'set_edu_') !== false) {
    step('none');
    $sys = explode('_', $user['step'])[2];
    $texts['edu_' . $sys] = str_replace('
    ', '\n', $text);
    file_put_contents('texts.json', json_encode($texts));
    sendMessage($from_id, "‚úÖ –í–∞—à —Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.\n\n#Ô∏è‚É£ –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: <b>$sys</b>", $manage_texts);
}

// ----------------- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ ----------------- //

elseif ($text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞') {
    step('add_admin');
    sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞:", $back_panel);
}

elseif ($user['step'] == 'add_admin' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
    $user = $sql->query("SELECT * FROM `users` WHERE `from_id` = '$text'");
    if($user->num_rows != 0){
        step('none');
        $sql->query("INSERT INTO `admins` (`chat_id`) VALUES ('$text')");
        sendMessage($from_id, "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>$text</code> —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.", $manage_admin);
    } else {  
        sendMessage($from_id, "‚Äº –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>$text</code> –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –±–æ—Ç–∞!", $back_panel);
    }
}

elseif ($text == '‚ûñ –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞') {
    step('rem_admin');
    sendMessage($from_id, "üî∞–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞:", $back_panel);
}

elseif ($user['step'] == 'rem_admin' and $text != '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é') {
    $user = $sql->query("SELECT * FROM `users` WHERE `from_id` = '$text'");
    if($user->num_rows > 0){
        step('none');
        $sql->query("DELETE FROM `admins` WHERE `chat_id` = '$text'");
        sendMessage($from_id, "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>$text</code> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.", $manage_admin);
    } else {
        sendMessage($from_id, "‚Äº –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>$text</code> –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –±–æ—Ç–∞!", $back_panel);  
    }   
}
    
elseif ($text == '‚öôÔ∏è –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤') {
    $res = $sql->query("SELECT * FROM `admins`");
    if ($res->num_rows == 0) {
        sendMessage($from_id, "‚ùå –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Ä–æ–±–æ—Ç–∞ –ø—É—Å—Ç.");
        exit();
    }
    while ($row = $res->fetch_array()) {
        $key[] = [['text' => $row['chat_id'], 'callback_data' => 'delete_admin-'.$row['chat_id']]];
    }
    $count = $res->num_rows;
    $key = json_encode(['inline_keyboard' => $key]);
    sendMessage($from_id, "üî∞–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Ä–æ–±–æ—Ç–∞:\n\nüîé –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: <code>$count</code>", $key);
}


/**
* Project name: Proxygram
* Channel: @Proxygram
* Group: @ProxygramHUB
 * Version: 2.5
**/
